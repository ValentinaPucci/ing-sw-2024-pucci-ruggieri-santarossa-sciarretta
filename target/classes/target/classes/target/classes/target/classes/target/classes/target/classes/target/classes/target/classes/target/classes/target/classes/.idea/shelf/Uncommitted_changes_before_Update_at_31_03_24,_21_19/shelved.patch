Index: target/classes/.idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/.idea/uiDesigner.xml b/target/classes/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(date 1711823696556)
+++ b/target/classes/.idea/uiDesigner.xml	(date 1711823696556)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: target/classes/.idea/workspace 2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/.idea/workspace 2.xml b/target/classes/.idea/workspace 2.xml
new file mode 100644
--- /dev/null	(date 1711822892326)
+++ b/target/classes/.idea/workspace 2.xml	(date 1711822892326)
@@ -0,0 +1,239 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AnalysisUIOptions">
+    <option name="SCOPE_TYPE" value="3" />
+  </component>
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="a8ca864a-4374-415f-a864-e25a5b975bb9" name="Changes" comment="update following attributes's name conventions">
+      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/it/polimi/ingsw/model/CardsCollection.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/polimi/ingsw/model/CardsCollection.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/it/polimi/ingsw/model/Game.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/polimi/ingsw/model/Game.java" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Class" />
+      </list>
+    </option>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
+  </component>
+  <component name="ProjectColorInfo">{
+  &quot;associatedIndex&quot;: 6
+}</component>
+  <component name="ProjectId" id="2dajexXglWEJLRHYVzXz8kvU2e4" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "JUnit.PersonalBoardTest.executor": "Run",
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "git-widget-placeholder": "main",
+    "kotlin-language-version-configured": "true",
+    "last_opened_file_path": "/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "project.structure.last.edited": "Modules",
+    "project.structure.proportion": "0.15",
+    "project.structure.side.proportion": "0.2",
+    "settings.editor.selected.configurable": "project.propVCSSupport.Mappings",
+    "vue.rearranger.settings.migration": "true"
+  },
+  "keyToStringList": {
+    "GitStage.ChangesTree.GroupingKeys": [
+      "directory",
+      "module",
+      "repository"
+    ],
+    "com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File": [
+      "PLAIN_TEXT"
+    ]
+  }
+}]]></component>
+  <component name="RecentsManager">
+    <key name="CopyFile.RECENT_KEYS">
+      <recent name="$PROJECT_DIR$" />
+      <recent name="$PROJECT_DIR$/src/main/java/it/polimi/ingsw/model" />
+    </key>
+    <key name="MoveFile.RECENT_KEYS">
+      <recent name="$PROJECT_DIR$/database" />
+      <recent name="$PROJECT_DIR$" />
+    </key>
+  </component>
+  <component name="RunManager">
+    <configuration name="PersonalBoardTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="ing-sw-2024-pucci-santarossa-ruggieri-sciarretta" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="it.polimi.ingsw.model.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="it.polimi.ingsw.model" />
+      <option name="MAIN_CLASS_NAME" value="it.polimi.ingsw.model.PersonalBoardTest" />
+      <option name="TEST_OBJECT" value="class" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="JUnit.PersonalBoardTest" />
+      </list>
+    </recent_temporary>
+  </component>
+  <component name="SharedIndexes">
+    <attachedChunks>
+      <set>
+        <option value="jdk-21.0.2-openjdk-21.0.2-4caba194b151-322ed176" />
+      </set>
+    </attachedChunks>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="a8ca864a-4374-415f-a864-e25a5b975bb9" name="Changes" comment="" />
+      <created>1710253182823</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1710253182823</updated>
+      <workItem from="1710253183969" duration="957000" />
+      <workItem from="1710336795262" duration="599000" />
+      <workItem from="1710414764832" duration="9794000" />
+      <workItem from="1710520774093" duration="2046000" />
+      <workItem from="1710522835460" duration="3022000" />
+      <workItem from="1710687962069" duration="2270000" />
+      <workItem from="1710690510484" duration="3924000" />
+      <workItem from="1710694445343" duration="1311000" />
+      <workItem from="1710695764341" duration="317000" />
+      <workItem from="1710696590207" duration="754000" />
+      <workItem from="1710757312586" duration="601000" />
+      <workItem from="1710856230403" duration="1943000" />
+      <workItem from="1710861555715" duration="16175000" />
+      <workItem from="1711100665664" duration="571000" />
+      <workItem from="1711199299845" duration="713000" />
+      <workItem from="1711200029081" duration="1756000" />
+      <workItem from="1711269993636" duration="5090000" />
+    </task>
+    <task id="LOCAL-00001" summary="database iniziali delle carte risorsa, gold e template per carte starter">
+      <option name="closed" value="true" />
+      <created>1710428321439</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1710428321439</updated>
+    </task>
+    <task id="LOCAL-00002" summary="starterCardsFront">
+      <option name="closed" value="true" />
+      <created>1710522781060</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1710522781060</updated>
+    </task>
+    <task id="LOCAL-00003" summary="objectiveCardsFront">
+      <option name="closed" value="true" />
+      <created>1710524622519</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1710524622519</updated>
+    </task>
+    <task id="LOCAL-00004" summary="commonBoard implementation and CommonBoardNode definition and implementation">
+      <option name="closed" value="true" />
+      <created>1710693170287</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1710693170287</updated>
+    </task>
+    <task id="LOCAL-00005" summary="final CommonBoard + UML updated">
+      <option name="closed" value="true" />
+      <created>1710695698635</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1710695698635</updated>
+    </task>
+    <task id="LOCAL-00006" summary="deletion of the .drawio file">
+      <option name="closed" value="true" />
+      <created>1710696684518</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1710696684518</updated>
+    </task>
+    <task id="LOCAL-00007" summary="UPDATED 'points' DatabaseGameCard">
+      <option name="closed" value="true" />
+      <created>1710757766173</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1710757766173</updated>
+    </task>
+    <task id="LOCAL-00008" summary="update following attributes's name conventions">
+      <option name="closed" value="true" />
+      <created>1710857692265</created>
+      <option name="number" value="00008" />
+      <option name="presentableId" value="LOCAL-00008" />
+      <option name="project" value="LOCAL" />
+      <updated>1710857692265</updated>
+    </task>
+    <task id="LOCAL-00009" summary="draft end game, deck empty, Game">
+      <option name="closed" value="true" />
+      <created>1711037832082</created>
+      <option name="number" value="00009" />
+      <option name="presentableId" value="LOCAL-00009" />
+      <option name="project" value="LOCAL" />
+      <updated>1711037832082</updated>
+    </task>
+    <option name="localTasksCounter" value="10" />
+    <servers />
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="database iniziali delle carte risorsa, gold e template per carte starter" />
+    <MESSAGE value="starterCardsFront" />
+    <MESSAGE value="objectiveCardsFront" />
+    <MESSAGE value="commonBoard implementation and CommonBoardNode definition and implementation" />
+    <MESSAGE value="final CommonBoard + UML updated" />
+    <MESSAGE value="deletion of the .drawio file" />
+    <MESSAGE value="UPDATED 'points' DatabaseGameCard" />
+    <MESSAGE value="update following attributes's name conventions" />
+    <MESSAGE value="draft end game, deck empty, Game" />
+    <option name="LAST_COMMIT_MESSAGE" value="draft end game, deck empty, Game" />
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/it/polimi/ingsw/model/CommonBoardNode.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.polimi.ingsw.model;\n\nclass CommonBoardNode {\n    private final int node_number; // Number of the node\n    private final boolean[] players; // Array of booleans to indicate player presence\n\n    public CommonBoardNode(int nodeNumber) {\n        this.node_number = nodeNumber;\n        players = new boolean[4]; // 4 players\n    }\n\n    // Method to set player presence in this node\n    public void setPlayer(int playerIndex, boolean present) {\n        if (playerIndex >= 0 && playerIndex < players.length) {\n            players[playerIndex] = present;\n        }\n    }\n\n\n    // Method to check if a player is present in this node\n    public boolean isPlayerPresent(int playerIndex) {\n        if (playerIndex >= 0 && playerIndex < players.length) {\n            return players[playerIndex];\n        }\n        return false;\n    }\n\n\n    // Method to get the node number\n    public int getNodeNumber() {\n        return node_number;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/polimi/ingsw/model/CommonBoardNode.java b/src/main/java/it/polimi/ingsw/model/CommonBoardNode.java
--- a/src/main/java/it/polimi/ingsw/model/CommonBoardNode.java	(revision d3b0d61aaabe5b7ebe1fee86a7352f6cda21bd39)
+++ b/src/main/java/it/polimi/ingsw/model/CommonBoardNode.java	(date 1711823569919)
@@ -1,6 +1,6 @@
 package it.polimi.ingsw.model;
 
-class CommonBoardNode {
+public class CommonBoardNode {
     private final int node_number; // Number of the node
     private final boolean[] players; // Array of booleans to indicate player presence
 
Index: target/classes/.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/.idea/modules.xml b/target/classes/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1711823696559)
+++ b/target/classes/.idea/modules.xml	(date 1711823696559)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta.iml" filepath="$PROJECT_DIR$/.idea/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: target/classes/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/README.md b/target/classes/README.md
new file mode 100644
--- /dev/null	(date 1711823696547)
+++ b/target/classes/README.md	(date 1711823696547)
@@ -0,0 +1,3 @@
+# ing-sw-2024-pucci-santarossa-ruggieri-sciarretta
+prova finale ingegneria del software 2023/2024
+
Index: target/surefire-reports/TEST-it.polimi.ingsw.model.CardsCollectionTest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<testsuite xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd\" name=\"it.polimi.ingsw.model.CardsCollectionTest\" time=\"0.208\" tests=\"4\" errors=\"0\" skipped=\"0\" failures=\"1\">\n  <properties>\n    <property name=\"java.specification.version\" value=\"21\"/>\n    <property name=\"sun.jnu.encoding\" value=\"UTF-8\"/>\n    <property name=\"java.class.path\" value=\"/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/test-classes:/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/classes:/Users/lollo/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.0/jackson-databind-2.13.0.jar:/Users/lollo/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.0/jackson-annotations-2.13.0.jar:/Users/lollo/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.0/jackson-core-2.13.0.jar:/Users/lollo/.m2/repository/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2.jar:/Users/lollo/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2.jar:/Users/lollo/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/lollo/.m2/repository/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2.jar:/Users/lollo/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/lollo/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2.jar:/Users/lollo/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2.jar:/Users/lollo/.m2/repository/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2.jar:\"/>\n    <property name=\"java.vm.vendor\" value=\"Oracle Corporation\"/>\n    <property name=\"sun.arch.data.model\" value=\"64\"/>\n    <property name=\"java.vendor.url\" value=\"https://java.oracle.com/\"/>\n    <property name=\"os.name\" value=\"Mac OS X\"/>\n    <property name=\"java.vm.specification.version\" value=\"21\"/>\n    <property name=\"sun.java.launcher\" value=\"SUN_STANDARD\"/>\n    <property name=\"user.country\" value=\"US\"/>\n    <property name=\"sun.boot.library.path\" value=\"/Users/lollo/Library/Java/JavaVirtualMachines/openjdk-21.0.2-3/Contents/Home/lib\"/>\n    <property name=\"sun.java.command\" value=\"/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/surefire/surefirebooter50392432889365728.jar /Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/surefire 2024-03-30T16-37-40_659-jvmRun1 surefire17611666405407287109tmp surefire_07071680441140012127tmp\"/>\n    <property name=\"jdk.debug\" value=\"release\"/>\n    <property name=\"surefire.test.class.path\" value=\"/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/test-classes:/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/classes:/Users/lollo/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.0/jackson-databind-2.13.0.jar:/Users/lollo/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.0/jackson-annotations-2.13.0.jar:/Users/lollo/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.0/jackson-core-2.13.0.jar:/Users/lollo/.m2/repository/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2.jar:/Users/lollo/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2.jar:/Users/lollo/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/lollo/.m2/repository/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2.jar:/Users/lollo/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/lollo/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2.jar:/Users/lollo/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2.jar:/Users/lollo/.m2/repository/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2.jar:\"/>\n    <property name=\"sun.cpu.endian\" value=\"little\"/>\n    <property name=\"user.home\" value=\"/Users/lollo\"/>\n    <property name=\"user.language\" value=\"it\"/>\n    <property name=\"java.specification.vendor\" value=\"Oracle Corporation\"/>\n    <property name=\"java.version.date\" value=\"2024-01-16\"/>\n    <property name=\"java.home\" value=\"/Users/lollo/Library/Java/JavaVirtualMachines/openjdk-21.0.2-3/Contents/Home\"/>\n    <property name=\"file.separator\" value=\"/\"/>\n    <property name=\"basedir\" value=\"/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta\"/>\n    <property name=\"java.vm.compressedOopsMode\" value=\"Zero based\"/>\n    <property name=\"line.separator\" value=\"&#10;\"/>\n    <property name=\"java.specification.name\" value=\"Java Platform API Specification\"/>\n    <property name=\"java.vm.specification.vendor\" value=\"Oracle Corporation\"/>\n    <property name=\"apple.awt.application.name\" value=\"ForkedBooter\"/>\n    <property name=\"surefire.real.class.path\" value=\"/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/surefire/surefirebooter50392432889365728.jar\"/>\n    <property name=\"sun.management.compiler\" value=\"HotSpot 64-Bit Tiered Compilers\"/>\n    <property name=\"java.runtime.version\" value=\"21.0.2+13-58\"/>\n    <property name=\"user.name\" value=\"lollo\"/>\n    <property name=\"stdout.encoding\" value=\"UTF-8\"/>\n    <property name=\"path.separator\" value=\":\"/>\n    <property name=\"os.version\" value=\"14.1.2\"/>\n    <property name=\"java.runtime.name\" value=\"OpenJDK Runtime Environment\"/>\n    <property name=\"file.encoding\" value=\"UTF-8\"/>\n    <property name=\"java.vm.name\" value=\"OpenJDK 64-Bit Server VM\"/>\n    <property name=\"localRepository\" value=\"/Users/lollo/.m2/repository\"/>\n    <property name=\"java.vendor.url.bug\" value=\"https://bugreport.java.com/bugreport/\"/>\n    <property name=\"java.io.tmpdir\" value=\"/var/folders/65/kq5zqrqj1q75g9xgb3prdv6m0000gq/T/\"/>\n    <property name=\"idea.version\" value=\"2023.3.5\"/>\n    <property name=\"java.version\" value=\"21.0.2\"/>\n    <property name=\"user.dir\" value=\"/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta\"/>\n    <property name=\"os.arch\" value=\"x86_64\"/>\n    <property name=\"java.vm.specification.name\" value=\"Java Virtual Machine Specification\"/>\n    <property name=\"native.encoding\" value=\"UTF-8\"/>\n    <property name=\"java.library.path\" value=\"/Users/lollo/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.\"/>\n    <property name=\"java.vm.info\" value=\"mixed mode, sharing\"/>\n    <property name=\"stderr.encoding\" value=\"UTF-8\"/>\n    <property name=\"java.vendor\" value=\"Oracle Corporation\"/>\n    <property name=\"java.vm.version\" value=\"21.0.2+13-58\"/>\n    <property name=\"sun.io.unicode.encoding\" value=\"UnicodeBig\"/>\n    <property name=\"java.class.version\" value=\"65.0\"/>\n  </properties>\n  <testcase name=\"testAddCard\" classname=\"it.polimi.ingsw.model.CardsCollectionTest\" time=\"0.026\"/>\n  <testcase name=\"testPopulateDeckStarterFrontAndBack\" classname=\"it.polimi.ingsw.model.CardsCollectionTest\" time=\"0.168\">\n    <failure message=\"expected: &lt;true&gt; but was: &lt;false&gt;\" type=\"org.opentest4j.AssertionFailedError\"><![CDATA[org.opentest4j.AssertionFailedError: expected: <true> but was: <false>\n\tat it.polimi.ingsw.model.CardsCollectionTest.testPopulateDeckStarterFrontAndBack(CardsCollectionTest.java:69)\n]]></failure>\n    <system-err><![CDATA[Error populating starter cards deck: Cannot invoke \"it.polimi.ingsw.model.Corner.setCornerResource(it.polimi.ingsw.model.Resource)\" because \"actual_corners_front[0][1]\" is null\n]]></system-err>\n  </testcase>\n  <testcase name=\"testPopulateDeckObjectiveCard\" classname=\"it.polimi.ingsw.model.CardsCollectionTest\" time=\"0.006\"/>\n  <testcase name=\"testSize\" classname=\"it.polimi.ingsw.model.CardsCollectionTest\" time=\"0.001\"/>\n</testsuite>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/surefire-reports/TEST-it.polimi.ingsw.model.CardsCollectionTest.xml b/target/surefire-reports/TEST-it.polimi.ingsw.model.CardsCollectionTest.xml
--- a/target/surefire-reports/TEST-it.polimi.ingsw.model.CardsCollectionTest.xml	(revision d3b0d61aaabe5b7ebe1fee86a7352f6cda21bd39)
+++ b/target/surefire-reports/TEST-it.polimi.ingsw.model.CardsCollectionTest.xml	(date 1711877103734)
@@ -1,68 +1,63 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="it.polimi.ingsw.model.CardsCollectionTest" time="0.208" tests="4" errors="0" skipped="0" failures="1">
+<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="it.polimi.ingsw.model.CardsCollectionTest" time="0.107" tests="4" errors="0" skipped="0" failures="0">
   <properties>
     <property name="java.specification.version" value="21"/>
     <property name="sun.jnu.encoding" value="UTF-8"/>
-    <property name="java.class.path" value="/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/test-classes:/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/classes:/Users/lollo/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.0/jackson-databind-2.13.0.jar:/Users/lollo/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.0/jackson-annotations-2.13.0.jar:/Users/lollo/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.0/jackson-core-2.13.0.jar:/Users/lollo/.m2/repository/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2.jar:/Users/lollo/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2.jar:/Users/lollo/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/lollo/.m2/repository/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2.jar:/Users/lollo/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/lollo/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2.jar:/Users/lollo/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2.jar:/Users/lollo/.m2/repository/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2.jar:"/>
-    <property name="java.vm.vendor" value="Oracle Corporation"/>
+    <property name="java.class.path" value="/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/test-classes:/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/classes:/Users/valentinapucci/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.0/jackson-databind-2.13.0.jar:/Users/valentinapucci/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.0/jackson-annotations-2.13.0.jar:/Users/valentinapucci/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.0/jackson-core-2.13.0.jar:/Users/valentinapucci/.m2/repository/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2.jar:/Users/valentinapucci/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2.jar:/Users/valentinapucci/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/valentinapucci/.m2/repository/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2.jar:/Users/valentinapucci/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/valentinapucci/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2.jar:/Users/valentinapucci/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2.jar:/Users/valentinapucci/.m2/repository/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2.jar:"/>
+    <property name="java.vm.vendor" value="Amazon.com Inc."/>
     <property name="sun.arch.data.model" value="64"/>
-    <property name="java.vendor.url" value="https://java.oracle.com/"/>
+    <property name="java.vendor.url" value="https://aws.amazon.com/corretto/"/>
     <property name="os.name" value="Mac OS X"/>
     <property name="java.vm.specification.version" value="21"/>
     <property name="sun.java.launcher" value="SUN_STANDARD"/>
-    <property name="user.country" value="US"/>
-    <property name="sun.boot.library.path" value="/Users/lollo/Library/Java/JavaVirtualMachines/openjdk-21.0.2-3/Contents/Home/lib"/>
-    <property name="sun.java.command" value="/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/surefire/surefirebooter50392432889365728.jar /Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/surefire 2024-03-30T16-37-40_659-jvmRun1 surefire17611666405407287109tmp surefire_07071680441140012127tmp"/>
+    <property name="user.country" value="IT"/>
+    <property name="sun.boot.library.path" value="/Users/valentinapucci/Library/Java/JavaVirtualMachines/corretto-21.0.2/Contents/Home/lib"/>
+    <property name="sun.java.command" value="/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/surefire/surefirebooter12997688140302333063.jar /Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/surefire 2024-03-31T11-25-03_270-jvmRun1 surefire16602931243228592565tmp surefire_012002122782767299690tmp"/>
     <property name="jdk.debug" value="release"/>
-    <property name="surefire.test.class.path" value="/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/test-classes:/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/classes:/Users/lollo/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.0/jackson-databind-2.13.0.jar:/Users/lollo/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.0/jackson-annotations-2.13.0.jar:/Users/lollo/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.0/jackson-core-2.13.0.jar:/Users/lollo/.m2/repository/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2.jar:/Users/lollo/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2.jar:/Users/lollo/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/lollo/.m2/repository/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2.jar:/Users/lollo/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/lollo/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2.jar:/Users/lollo/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2.jar:/Users/lollo/.m2/repository/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2.jar:"/>
+    <property name="surefire.test.class.path" value="/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/test-classes:/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/classes:/Users/valentinapucci/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.0/jackson-databind-2.13.0.jar:/Users/valentinapucci/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.0/jackson-annotations-2.13.0.jar:/Users/valentinapucci/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.0/jackson-core-2.13.0.jar:/Users/valentinapucci/.m2/repository/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2.jar:/Users/valentinapucci/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2.jar:/Users/valentinapucci/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/valentinapucci/.m2/repository/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2.jar:/Users/valentinapucci/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/valentinapucci/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2.jar:/Users/valentinapucci/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2.jar:/Users/valentinapucci/.m2/repository/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2.jar:"/>
     <property name="sun.cpu.endian" value="little"/>
-    <property name="user.home" value="/Users/lollo"/>
-    <property name="user.language" value="it"/>
+    <property name="user.home" value="/Users/valentinapucci"/>
+    <property name="user.language" value="en"/>
     <property name="java.specification.vendor" value="Oracle Corporation"/>
     <property name="java.version.date" value="2024-01-16"/>
-    <property name="java.home" value="/Users/lollo/Library/Java/JavaVirtualMachines/openjdk-21.0.2-3/Contents/Home"/>
+    <property name="java.home" value="/Users/valentinapucci/Library/Java/JavaVirtualMachines/corretto-21.0.2/Contents/Home"/>
     <property name="file.separator" value="/"/>
-    <property name="basedir" value="/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta"/>
+    <property name="basedir" value="/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta"/>
     <property name="java.vm.compressedOopsMode" value="Zero based"/>
     <property name="line.separator" value="&#10;"/>
-    <property name="java.specification.name" value="Java Platform API Specification"/>
     <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
+    <property name="java.specification.name" value="Java Platform API Specification"/>
     <property name="apple.awt.application.name" value="ForkedBooter"/>
-    <property name="surefire.real.class.path" value="/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/surefire/surefirebooter50392432889365728.jar"/>
+    <property name="surefire.real.class.path" value="/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/surefire/surefirebooter12997688140302333063.jar"/>
     <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
-    <property name="java.runtime.version" value="21.0.2+13-58"/>
-    <property name="user.name" value="lollo"/>
+    <property name="java.runtime.version" value="21.0.2+13-LTS"/>
+    <property name="user.name" value="valentinapucci"/>
     <property name="stdout.encoding" value="UTF-8"/>
     <property name="path.separator" value=":"/>
-    <property name="os.version" value="14.1.2"/>
+    <property name="os.version" value="14.4.1"/>
     <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
     <property name="file.encoding" value="UTF-8"/>
     <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
-    <property name="localRepository" value="/Users/lollo/.m2/repository"/>
-    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
-    <property name="java.io.tmpdir" value="/var/folders/65/kq5zqrqj1q75g9xgb3prdv6m0000gq/T/"/>
-    <property name="idea.version" value="2023.3.5"/>
+    <property name="java.vendor.version" value="Corretto-21.0.2.13.1"/>
+    <property name="localRepository" value="/Users/valentinapucci/.m2/repository"/>
+    <property name="java.vendor.url.bug" value="https://github.com/corretto/corretto-21/issues/"/>
+    <property name="java.io.tmpdir" value="/var/folders/n1/7x8j5tqd4dn4h7qdrs7p96w80000gn/T/"/>
+    <property name="idea.version" value="2023.3.4"/>
     <property name="java.version" value="21.0.2"/>
-    <property name="user.dir" value="/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta"/>
-    <property name="os.arch" value="x86_64"/>
+    <property name="user.dir" value="/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta"/>
+    <property name="os.arch" value="aarch64"/>
     <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
     <property name="native.encoding" value="UTF-8"/>
-    <property name="java.library.path" value="/Users/lollo/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
+    <property name="java.library.path" value="/Users/valentinapucci/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
     <property name="java.vm.info" value="mixed mode, sharing"/>
     <property name="stderr.encoding" value="UTF-8"/>
-    <property name="java.vendor" value="Oracle Corporation"/>
-    <property name="java.vm.version" value="21.0.2+13-58"/>
+    <property name="java.vendor" value="Amazon.com Inc."/>
+    <property name="java.vm.version" value="21.0.2+13-LTS"/>
     <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
     <property name="java.class.version" value="65.0"/>
   </properties>
-  <testcase name="testAddCard" classname="it.polimi.ingsw.model.CardsCollectionTest" time="0.026"/>
-  <testcase name="testPopulateDeckStarterFrontAndBack" classname="it.polimi.ingsw.model.CardsCollectionTest" time="0.168">
-    <failure message="expected: &lt;true&gt; but was: &lt;false&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: expected: <true> but was: <false>
-	at it.polimi.ingsw.model.CardsCollectionTest.testPopulateDeckStarterFrontAndBack(CardsCollectionTest.java:69)
-]]></failure>
-    <system-err><![CDATA[Error populating starter cards deck: Cannot invoke "it.polimi.ingsw.model.Corner.setCornerResource(it.polimi.ingsw.model.Resource)" because "actual_corners_front[0][1]" is null
-]]></system-err>
-  </testcase>
-  <testcase name="testPopulateDeckObjectiveCard" classname="it.polimi.ingsw.model.CardsCollectionTest" time="0.006"/>
-  <testcase name="testSize" classname="it.polimi.ingsw.model.CardsCollectionTest" time="0.001"/>
+  <testcase name="testAddCard" classname="it.polimi.ingsw.model.CardsCollectionTest" time="0.011"/>
+  <testcase name="testPopulateDeckStarterFrontAndBack" classname="it.polimi.ingsw.model.CardsCollectionTest" time="0.088"/>
+  <testcase name="testPopulateDeckObjectiveCard" classname="it.polimi.ingsw.model.CardsCollectionTest" time="0.004"/>
+  <testcase name="testSize" classname="it.polimi.ingsw.model.CardsCollectionTest" time="0"/>
 </testsuite>
\ No newline at end of file
Index: target/classes/.idea/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/.idea/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta.iml b/target/classes/.idea/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta.iml
new file mode 100644
--- /dev/null	(date 1711823696557)
+++ b/target/classes/.idea/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta.iml	(date 1711823696557)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="fasterxml.jackson.core.annotations" level="project" />
+    <orderEntry type="library" name="fasterxml.jackson.core.databind" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: target/classes/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/.idea/vcs.xml b/target/classes/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1711823696558)
+++ b/target/classes/.idea/vcs.xml	(date 1711823696558)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: target/surefire-reports/TEST-it.polimi.ingsw.model.PersonalBoardTest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<testsuite xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd\" name=\"it.polimi.ingsw.model.PersonalBoardTest\" time=\"0.168\" tests=\"10\" errors=\"0\" skipped=\"0\" failures=\"0\">\n  <properties>\n    <property name=\"java.specification.version\" value=\"21\"/>\n    <property name=\"sun.jnu.encoding\" value=\"UTF-8\"/>\n    <property name=\"java.class.path\" value=\"/Users/riccardo__ruggieri/polimi/code/Proj_sw/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/test-classes:/Users/riccardo__ruggieri/polimi/code/Proj_sw/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/classes:/Users/riccardo__ruggieri/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.0/jackson-databind-2.13.0.jar:/Users/riccardo__ruggieri/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.0/jackson-annotations-2.13.0.jar:/Users/riccardo__ruggieri/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.0/jackson-core-2.13.0.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2.jar:\"/>\n    <property name=\"java.vm.vendor\" value=\"Oracle Corporation\"/>\n    <property name=\"sun.arch.data.model\" value=\"64\"/>\n    <property name=\"java.vendor.url\" value=\"https://java.oracle.com/\"/>\n    <property name=\"os.name\" value=\"Mac OS X\"/>\n    <property name=\"java.vm.specification.version\" value=\"21\"/>\n    <property name=\"sun.java.launcher\" value=\"SUN_STANDARD\"/>\n    <property name=\"user.country\" value=\"GB\"/>\n    <property name=\"sun.boot.library.path\" value=\"/Users/riccardo__ruggieri/Library/Java/JavaVirtualMachines/openjdk-21.0.2/Contents/Home/lib\"/>\n    <property name=\"sun.java.command\" value=\"/Users/riccardo__ruggieri/polimi/code/Proj_sw/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/surefire/surefirebooter102846714306564624.jar /Users/riccardo__ruggieri/polimi/code/Proj_sw/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/surefire 2024-03-30T16-49-59_272-jvmRun1 surefire4168975546293085366tmp surefire_05477360056035560213tmp\"/>\n    <property name=\"jdk.debug\" value=\"release\"/>\n    <property name=\"surefire.test.class.path\" value=\"/Users/riccardo__ruggieri/polimi/code/Proj_sw/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/test-classes:/Users/riccardo__ruggieri/polimi/code/Proj_sw/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/classes:/Users/riccardo__ruggieri/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.0/jackson-databind-2.13.0.jar:/Users/riccardo__ruggieri/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.0/jackson-annotations-2.13.0.jar:/Users/riccardo__ruggieri/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.0/jackson-core-2.13.0.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2.jar:\"/>\n    <property name=\"sun.cpu.endian\" value=\"little\"/>\n    <property name=\"user.home\" value=\"/Users/riccardo__ruggieri\"/>\n    <property name=\"user.language\" value=\"en\"/>\n    <property name=\"java.specification.vendor\" value=\"Oracle Corporation\"/>\n    <property name=\"java.version.date\" value=\"2024-01-16\"/>\n    <property name=\"java.home\" value=\"/Users/riccardo__ruggieri/Library/Java/JavaVirtualMachines/openjdk-21.0.2/Contents/Home\"/>\n    <property name=\"file.separator\" value=\"/\"/>\n    <property name=\"basedir\" value=\"/Users/riccardo__ruggieri/polimi/code/Proj_sw/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta\"/>\n    <property name=\"java.vm.compressedOopsMode\" value=\"Zero based\"/>\n    <property name=\"line.separator\" value=\"&#10;\"/>\n    <property name=\"java.specification.name\" value=\"Java Platform API Specification\"/>\n    <property name=\"java.vm.specification.vendor\" value=\"Oracle Corporation\"/>\n    <property name=\"apple.awt.application.name\" value=\"ForkedBooter\"/>\n    <property name=\"surefire.real.class.path\" value=\"/Users/riccardo__ruggieri/polimi/code/Proj_sw/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/surefire/surefirebooter102846714306564624.jar\"/>\n    <property name=\"sun.management.compiler\" value=\"HotSpot 64-Bit Tiered Compilers\"/>\n    <property name=\"java.runtime.version\" value=\"21.0.2+13-58\"/>\n    <property name=\"user.name\" value=\"riccardo__ruggieri\"/>\n    <property name=\"stdout.encoding\" value=\"UTF-8\"/>\n    <property name=\"path.separator\" value=\":\"/>\n    <property name=\"os.version\" value=\"14.1.2\"/>\n    <property name=\"java.runtime.name\" value=\"OpenJDK Runtime Environment\"/>\n    <property name=\"file.encoding\" value=\"UTF-8\"/>\n    <property name=\"java.vm.name\" value=\"OpenJDK 64-Bit Server VM\"/>\n    <property name=\"localRepository\" value=\"/Users/riccardo__ruggieri/.m2/repository\"/>\n    <property name=\"java.vendor.url.bug\" value=\"https://bugreport.java.com/bugreport/\"/>\n    <property name=\"java.io.tmpdir\" value=\"/var/folders/9h/m94sm4x10j16rv4m58ft5tdr0000gn/T/\"/>\n    <property name=\"idea.version\" value=\"2023.3.6\"/>\n    <property name=\"java.version\" value=\"21.0.2\"/>\n    <property name=\"user.dir\" value=\"/Users/riccardo__ruggieri/polimi/code/Proj_sw/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta\"/>\n    <property name=\"os.arch\" value=\"aarch64\"/>\n    <property name=\"java.vm.specification.name\" value=\"Java Virtual Machine Specification\"/>\n    <property name=\"native.encoding\" value=\"UTF-8\"/>\n    <property name=\"java.library.path\" value=\"/Users/riccardo__ruggieri/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.\"/>\n    <property name=\"java.vm.info\" value=\"mixed mode, sharing\"/>\n    <property name=\"stderr.encoding\" value=\"UTF-8\"/>\n    <property name=\"java.vendor\" value=\"Oracle Corporation\"/>\n    <property name=\"java.vm.version\" value=\"21.0.2+13-58\"/>\n    <property name=\"sun.io.unicode.encoding\" value=\"UnicodeBig\"/>\n    <property name=\"java.class.version\" value=\"65.0\"/>\n  </properties>\n  <testcase name=\"testGoldCardPointsUpdate\" classname=\"it.polimi.ingsw.model.PersonalBoardTest\" time=\"0.005\"/>\n  <testcase name=\"testBruteForcePlaceCardSE\" classname=\"it.polimi.ingsw.model.PersonalBoardTest\" time=\"0.024\"/>\n  <testcase name=\"testPlaceCardOverlappingException_1\" classname=\"it.polimi.ingsw.model.PersonalBoardTest\" time=\"0.007\"/>\n  <testcase name=\"testPlaceCardOverlappingException_2\" classname=\"it.polimi.ingsw.model.PersonalBoardTest\" time=\"0.006\"/>\n  <testcase name=\"testCalculateScoresObjectivePattern\" classname=\"it.polimi.ingsw.model.PersonalBoardTest\" time=\"0.043\"/>\n  <testcase name=\"testCalculateResourceItemObjective\" classname=\"it.polimi.ingsw.model.PersonalBoardTest\" time=\"0.008\"/>\n  <testcase name=\"testCornerCoverage\" classname=\"it.polimi.ingsw.model.PersonalBoardTest\" time=\"0.033\"/>\n  <testcase name=\"testPlaceCardAtNE\" classname=\"it.polimi.ingsw.model.PersonalBoardTest\" time=\"0.006\"/>\n  <testcase name=\"testPlaceCardAtSE\" classname=\"it.polimi.ingsw.model.PersonalBoardTest\" time=\"0.019\"/>\n  <testcase name=\"testPlaceCardAtSO\" classname=\"it.polimi.ingsw.model.PersonalBoardTest\" time=\"0.013\"/>\n</testsuite>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/surefire-reports/TEST-it.polimi.ingsw.model.PersonalBoardTest.xml b/target/surefire-reports/TEST-it.polimi.ingsw.model.PersonalBoardTest.xml
--- a/target/surefire-reports/TEST-it.polimi.ingsw.model.PersonalBoardTest.xml	(revision d3b0d61aaabe5b7ebe1fee86a7352f6cda21bd39)
+++ b/target/surefire-reports/TEST-it.polimi.ingsw.model.PersonalBoardTest.xml	(date 1711877103839)
@@ -1,68 +1,69 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="it.polimi.ingsw.model.PersonalBoardTest" time="0.168" tests="10" errors="0" skipped="0" failures="0">
+<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="it.polimi.ingsw.model.PersonalBoardTest" time="0.101" tests="10" errors="0" skipped="0" failures="0">
   <properties>
     <property name="java.specification.version" value="21"/>
     <property name="sun.jnu.encoding" value="UTF-8"/>
-    <property name="java.class.path" value="/Users/riccardo__ruggieri/polimi/code/Proj_sw/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/test-classes:/Users/riccardo__ruggieri/polimi/code/Proj_sw/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/classes:/Users/riccardo__ruggieri/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.0/jackson-databind-2.13.0.jar:/Users/riccardo__ruggieri/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.0/jackson-annotations-2.13.0.jar:/Users/riccardo__ruggieri/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.0/jackson-core-2.13.0.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2.jar:"/>
-    <property name="java.vm.vendor" value="Oracle Corporation"/>
+    <property name="java.class.path" value="/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/test-classes:/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/classes:/Users/valentinapucci/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.0/jackson-databind-2.13.0.jar:/Users/valentinapucci/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.0/jackson-annotations-2.13.0.jar:/Users/valentinapucci/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.0/jackson-core-2.13.0.jar:/Users/valentinapucci/.m2/repository/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2.jar:/Users/valentinapucci/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2.jar:/Users/valentinapucci/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/valentinapucci/.m2/repository/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2.jar:/Users/valentinapucci/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/valentinapucci/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2.jar:/Users/valentinapucci/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2.jar:/Users/valentinapucci/.m2/repository/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2.jar:"/>
+    <property name="java.vm.vendor" value="Amazon.com Inc."/>
     <property name="sun.arch.data.model" value="64"/>
-    <property name="java.vendor.url" value="https://java.oracle.com/"/>
+    <property name="java.vendor.url" value="https://aws.amazon.com/corretto/"/>
     <property name="os.name" value="Mac OS X"/>
     <property name="java.vm.specification.version" value="21"/>
     <property name="sun.java.launcher" value="SUN_STANDARD"/>
-    <property name="user.country" value="GB"/>
-    <property name="sun.boot.library.path" value="/Users/riccardo__ruggieri/Library/Java/JavaVirtualMachines/openjdk-21.0.2/Contents/Home/lib"/>
-    <property name="sun.java.command" value="/Users/riccardo__ruggieri/polimi/code/Proj_sw/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/surefire/surefirebooter102846714306564624.jar /Users/riccardo__ruggieri/polimi/code/Proj_sw/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/surefire 2024-03-30T16-49-59_272-jvmRun1 surefire4168975546293085366tmp surefire_05477360056035560213tmp"/>
+    <property name="user.country" value="IT"/>
+    <property name="sun.boot.library.path" value="/Users/valentinapucci/Library/Java/JavaVirtualMachines/corretto-21.0.2/Contents/Home/lib"/>
+    <property name="sun.java.command" value="/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/surefire/surefirebooter12997688140302333063.jar /Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/surefire 2024-03-31T11-25-03_270-jvmRun1 surefire16602931243228592565tmp surefire_012002122782767299690tmp"/>
     <property name="jdk.debug" value="release"/>
-    <property name="surefire.test.class.path" value="/Users/riccardo__ruggieri/polimi/code/Proj_sw/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/test-classes:/Users/riccardo__ruggieri/polimi/code/Proj_sw/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/classes:/Users/riccardo__ruggieri/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.0/jackson-databind-2.13.0.jar:/Users/riccardo__ruggieri/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.0/jackson-annotations-2.13.0.jar:/Users/riccardo__ruggieri/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.0/jackson-core-2.13.0.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2.jar:/Users/riccardo__ruggieri/.m2/repository/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2.jar:"/>
+    <property name="surefire.test.class.path" value="/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/test-classes:/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/classes:/Users/valentinapucci/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.0/jackson-databind-2.13.0.jar:/Users/valentinapucci/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.0/jackson-annotations-2.13.0.jar:/Users/valentinapucci/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.0/jackson-core-2.13.0.jar:/Users/valentinapucci/.m2/repository/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2.jar:/Users/valentinapucci/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2.jar:/Users/valentinapucci/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/valentinapucci/.m2/repository/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2.jar:/Users/valentinapucci/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/valentinapucci/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2.jar:/Users/valentinapucci/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2.jar:/Users/valentinapucci/.m2/repository/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2.jar:"/>
     <property name="sun.cpu.endian" value="little"/>
-    <property name="user.home" value="/Users/riccardo__ruggieri"/>
+    <property name="user.home" value="/Users/valentinapucci"/>
     <property name="user.language" value="en"/>
     <property name="java.specification.vendor" value="Oracle Corporation"/>
     <property name="java.version.date" value="2024-01-16"/>
-    <property name="java.home" value="/Users/riccardo__ruggieri/Library/Java/JavaVirtualMachines/openjdk-21.0.2/Contents/Home"/>
+    <property name="java.home" value="/Users/valentinapucci/Library/Java/JavaVirtualMachines/corretto-21.0.2/Contents/Home"/>
     <property name="file.separator" value="/"/>
-    <property name="basedir" value="/Users/riccardo__ruggieri/polimi/code/Proj_sw/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta"/>
+    <property name="basedir" value="/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta"/>
     <property name="java.vm.compressedOopsMode" value="Zero based"/>
     <property name="line.separator" value="&#10;"/>
-    <property name="java.specification.name" value="Java Platform API Specification"/>
     <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
+    <property name="java.specification.name" value="Java Platform API Specification"/>
     <property name="apple.awt.application.name" value="ForkedBooter"/>
-    <property name="surefire.real.class.path" value="/Users/riccardo__ruggieri/polimi/code/Proj_sw/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/surefire/surefirebooter102846714306564624.jar"/>
+    <property name="surefire.real.class.path" value="/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/target/surefire/surefirebooter12997688140302333063.jar"/>
     <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
-    <property name="java.runtime.version" value="21.0.2+13-58"/>
-    <property name="user.name" value="riccardo__ruggieri"/>
+    <property name="java.runtime.version" value="21.0.2+13-LTS"/>
+    <property name="user.name" value="valentinapucci"/>
     <property name="stdout.encoding" value="UTF-8"/>
     <property name="path.separator" value=":"/>
-    <property name="os.version" value="14.1.2"/>
+    <property name="os.version" value="14.4.1"/>
     <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
     <property name="file.encoding" value="UTF-8"/>
     <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
-    <property name="localRepository" value="/Users/riccardo__ruggieri/.m2/repository"/>
-    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
-    <property name="java.io.tmpdir" value="/var/folders/9h/m94sm4x10j16rv4m58ft5tdr0000gn/T/"/>
-    <property name="idea.version" value="2023.3.6"/>
+    <property name="java.vendor.version" value="Corretto-21.0.2.13.1"/>
+    <property name="localRepository" value="/Users/valentinapucci/.m2/repository"/>
+    <property name="java.vendor.url.bug" value="https://github.com/corretto/corretto-21/issues/"/>
+    <property name="java.io.tmpdir" value="/var/folders/n1/7x8j5tqd4dn4h7qdrs7p96w80000gn/T/"/>
+    <property name="idea.version" value="2023.3.4"/>
     <property name="java.version" value="21.0.2"/>
-    <property name="user.dir" value="/Users/riccardo__ruggieri/polimi/code/Proj_sw/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta"/>
+    <property name="user.dir" value="/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta"/>
     <property name="os.arch" value="aarch64"/>
     <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
     <property name="native.encoding" value="UTF-8"/>
-    <property name="java.library.path" value="/Users/riccardo__ruggieri/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
+    <property name="java.library.path" value="/Users/valentinapucci/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
     <property name="java.vm.info" value="mixed mode, sharing"/>
     <property name="stderr.encoding" value="UTF-8"/>
-    <property name="java.vendor" value="Oracle Corporation"/>
-    <property name="java.vm.version" value="21.0.2+13-58"/>
+    <property name="java.vendor" value="Amazon.com Inc."/>
+    <property name="java.vm.version" value="21.0.2+13-LTS"/>
     <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
     <property name="java.class.version" value="65.0"/>
   </properties>
   <testcase name="testGoldCardPointsUpdate" classname="it.polimi.ingsw.model.PersonalBoardTest" time="0.005"/>
-  <testcase name="testBruteForcePlaceCardSE" classname="it.polimi.ingsw.model.PersonalBoardTest" time="0.024"/>
+  <testcase name="testBruteForcePlaceCardSE" classname="it.polimi.ingsw.model.PersonalBoardTest" time="0.014"/>
   <testcase name="testPlaceCardOverlappingException_1" classname="it.polimi.ingsw.model.PersonalBoardTest" time="0.007"/>
-  <testcase name="testPlaceCardOverlappingException_2" classname="it.polimi.ingsw.model.PersonalBoardTest" time="0.006"/>
-  <testcase name="testCalculateScoresObjectivePattern" classname="it.polimi.ingsw.model.PersonalBoardTest" time="0.043"/>
+  <testcase name="testPlaceCardOverlappingException_2" classname="it.polimi.ingsw.model.PersonalBoardTest" time="0.007"/>
+  <testcase name="testCalculateScoresObjectivePattern" classname="it.polimi.ingsw.model.PersonalBoardTest" time="0.026"/>
   <testcase name="testCalculateResourceItemObjective" classname="it.polimi.ingsw.model.PersonalBoardTest" time="0.008"/>
-  <testcase name="testCornerCoverage" classname="it.polimi.ingsw.model.PersonalBoardTest" time="0.033"/>
-  <testcase name="testPlaceCardAtNE" classname="it.polimi.ingsw.model.PersonalBoardTest" time="0.006"/>
-  <testcase name="testPlaceCardAtSE" classname="it.polimi.ingsw.model.PersonalBoardTest" time="0.019"/>
-  <testcase name="testPlaceCardAtSO" classname="it.polimi.ingsw.model.PersonalBoardTest" time="0.013"/>
+  <testcase name="testCornerCoverage" classname="it.polimi.ingsw.model.PersonalBoardTest" time="0.009"/>
+  <testcase name="testPlaceCardAtNE" classname="it.polimi.ingsw.model.PersonalBoardTest" time="0.012"/>
+  <testcase name="testPlaceCardAtSE" classname="it.polimi.ingsw.model.PersonalBoardTest" time="0.007"/>
+  <testcase name="testPlaceCardAtSO" classname="it.polimi.ingsw.model.PersonalBoardTest" time="0.006"/>
 </testsuite>
\ No newline at end of file
Index: target/classes/database/databaseGameCards.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/database/databaseGameCards.json b/target/classes/database/databaseGameCards.json
new file mode 100644
--- /dev/null	(date 1711823696538)
+++ b/target/classes/database/databaseGameCards.json	(date 1711823696538)
@@ -0,0 +1,1625 @@
+
+{
+  "cards": [
+    {
+      "id": 1,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Red",
+      "NE": "Empty",
+      "SE": "NonVisible",
+      "SW": "Mushroom",
+      "NW": "Mushroom",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 2,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Red",
+      "NE": "Mushroom",
+      "SE": "Empty",
+      "SW": "NonVisible",
+      "NW": "Mushroom",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 3,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Red",
+      "NE": "NonVisible",
+      "SE": "Mushroom",
+      "SW": "Mushroom",
+      "NW": "Empty",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 4,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Red",
+      "NE": "Mushroom",
+      "SE": "Mushroom",
+      "SW": "Empty",
+      "NW": "NonVisible",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 5,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Red",
+      "NE": "Feather",
+      "SE": "Mushroom",
+      "SW": "Leaf",
+      "NW": "NonVisible",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 6,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Red",
+      "NE": "Mushroom",
+      "SE": "Wolf",
+      "SW": "NonVisible",
+      "NW": "Potion",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 7,
+      "type": "Resource",
+      "visibleCorners": 4,
+      "color": "Red",
+      "NE": "Butterfly",
+      "SE": "Empty",
+      "SW": "Parchment",
+      "NW": "Mushroom",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 8,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Red",
+      "NE": "Mushroom",
+      "SE": "NonVisible",
+      "SW": "Empty",
+      "NW": "Empty",
+      "points": 1,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 9,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Red",
+      "NE": "NonVisible",
+      "SE": "Empty",
+      "SW": "Empty",
+      "NW": "Mushroom",
+      "points": 1,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 10,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Red",
+      "NE": "Empty",
+      "SE": "Empty",
+      "SW": "Mushroom",
+      "NW": "NonVisible",
+      "points": 1,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 11,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Green",
+      "NE": "Empty",
+      "SE": "NonVisible",
+      "SW": "Leaf",
+      "NW": "Leaf",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 12,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Green",
+      "NE": "Leaf",
+      "SE": "Empty",
+      "SW": "NonVisible",
+      "NW": "Leaf",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 13,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Green",
+      "NE": "NonVisible",
+      "SE": "Leaf",
+      "SW": "Leaf",
+      "NW": "Empty",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 14,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Green",
+      "NE": "Leaf",
+      "SE": "Leaf",
+      "SW": "Empty",
+      "NW": "NonVisible",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 15,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Green",
+      "NE": "Butterfly",
+      "SE": "Leaf",
+      "SW": "Feather",
+      "NW": "NonVisible",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 16,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Green",
+      "NE": "Leaf",
+      "SE": "Potion",
+      "SW": "NonVisible",
+      "NW": "Mushroom",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 17,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Green",
+      "NE": "NonVisible",
+      "SE": "Wolf",
+      "SW": "Leaf",
+      "NW": "Parchment",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 18,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Green",
+      "NE": "Empty",
+      "SE": "NonVisible",
+      "SW": "Leaf",
+      "NW": "Empty",
+      "points": 1,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 19,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Green",
+      "NE": "Empty",
+      "SE": "Leaf",
+      "SW": "NonVisible",
+      "NW": "Empty",
+      "points": 1,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 20,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Green",
+      "NE": "Leaf",
+      "SE": "Empty",
+      "SW": "Empty",
+      "NW": "NonVisible",
+      "points": 1,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 21,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Blue",
+      "NE": "Wolf",
+      "SE": "NonVisible",
+      "SW": "Empty",
+      "NW": "Wolf",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 22,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Blue",
+      "NE": "Empty",
+      "SE": "Wolf",
+      "SW": "Wolf",
+      "NW": "NonVisible",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 23,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Blue",
+      "NE": "NonVisible",
+      "SE": "Empty",
+      "SW": "Wolf",
+      "NW": "Wolf",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 24,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Blue",
+      "NE": "Wolf",
+      "SE": "Wolf",
+      "SW": "NonVisible",
+      "NW": "Empty",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 25,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Blue",
+      "NE": "Butterfly",
+      "SE": "Wolf",
+      "SW": "Potion",
+      "NW": "NonVisible",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 26,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Blue",
+      "NE": "Wolf",
+      "SE": "Parchment",
+      "SW": "NonVisible",
+      "NW": "Leaf",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 27,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Blue",
+      "NE": "NonVisible",
+      "SE": "Mushroom",
+      "SW": "Wolf",
+      "NW": "Feather",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 28,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Blue",
+      "NE": "Empty",
+      "SE": "Empty",
+      "SW": "Wolf",
+      "NW": "NonVisible",
+      "points": 1,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 29,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Blue",
+      "NE": "NonVisible",
+      "SE": "Wolf",
+      "SW": "Empty",
+      "NW": "Empty",
+      "points": 1,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 30,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Blue",
+      "NE": "Wolf",
+      "SE": "NonVisible",
+      "SW": "Empty",
+      "NW": "Empty",
+      "points": 1,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 31,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Purple",
+      "NE": "Butterfly",
+      "SE": "NonVisible",
+      "SW": "Empty",
+      "NW": "Butterfly",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 32,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Purple",
+      "NE": "Empty",
+      "SE": "Butterfly",
+      "SW": "Butterfly",
+      "NW": "NonVisible",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 33,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Purple",
+      "NE": "NonVisible",
+      "SE": "Empty",
+      "SW": "Butterfly",
+      "NW": "Butterfly",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 34,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Purple",
+      "NE": "Butterfly",
+      "SE": "Butterfly",
+      "SW": "NonVisible",
+      "NW": "Empty",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 35,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Purple",
+      "NE": "Feather",
+      "SE": "Butterfly",
+      "SW": "Wolf",
+      "NW": "Empty",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 36,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Purple",
+      "NE": "Butterfly",
+      "SE": "Mushroom",
+      "SW": "NonVisible",
+      "NW": "Parchment",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 37,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Purple",
+      "NE": "Leaf",
+      "SE": "NonVisible",
+      "SW": "Potion",
+      "NW": "Butterfly",
+      "points": 0,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 38,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Purple",
+      "NE": "NonVisible",
+      "SE": "Empty",
+      "SW": "Empty",
+      "NW": "Butterfly",
+      "points": 1,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 39,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Purple",
+      "NE": "Empty",
+      "SE": "Butterfly",
+      "SW": "NonVisible",
+      "NW": "Empty",
+      "points": 1,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 40,
+      "type": "Resource",
+      "visibleCorners": 3,
+      "color": "Purple",
+      "NE": "Butterfly",
+      "SE": "Empty",
+      "SW": "Empty",
+      "NW": "NonVisible",
+      "points": 1,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 41,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Red",
+      "NE": "Empty",
+      "SE": "Feather",
+      "SW": "Empty",
+      "NW": "NonVisible",
+      "points": 1,
+      "MushroomRequired": 2,
+      "ButterflyRequired": 0,
+      "WolfRequired": 1,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 1
+    },
+
+    {
+      "id": 42,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Red",
+      "NE": "Potion",
+      "SE": "Empty",
+      "SW": "NonVisible",
+      "NW": "Empty",
+      "points": 1,
+      "MushroomRequired": 2,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 1,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 1,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 43,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Red",
+      "NE": "Empty",
+      "SE": "NonVisible",
+      "SW": "Empty",
+      "NW": "Parchment",
+      "points": 1,
+      "MushroomRequired": 2,
+      "ButterflyRequired": 1,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 1,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 44,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Red",
+      "NE": "Empty",
+      "SE": "Empty",
+      "SW": "NonVisible",
+      "NW": "Empty",
+      "points": 2,
+      "MushroomRequired": 3,
+      "ButterflyRequired": 0,
+      "WolfRequired": 1,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 1,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 45,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Red",
+      "NE": "Empty",
+      "SE": "NonVisible",
+      "SW": "Empty",
+      "NW": "Empty",
+      "points": 2,
+      "MushroomRequired": 3,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 1,
+      "isCornerCoverageRequired": 1,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 46,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Red",
+      "NE": "NonVisible",
+      "SE": "Empty",
+      "SW": "Empty",
+      "NW": "Empty",
+      "points": 2,
+      "MushroomRequired": 3,
+      "ButterflyRequired": 1,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 1,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+
+    {
+      "id": 47,
+      "type": "Gold",
+      "visibleCorners": 2,
+      "color": "Red",
+      "NE": "NonVisible",
+      "SE": "NonVisible",
+      "SW": "Potion",
+      "NW": "Empty",
+      "points": 3,
+      "MushroomRequired": 3,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 48,
+      "type": "Gold",
+      "visibleCorners": 2,
+      "color": "Red",
+      "NE": "Empty",
+      "SE": "NonVisible",
+      "SW": "NonVisible",
+      "NW": "Feather",
+      "points": 3,
+      "MushroomRequired": 3,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+
+    {
+      "id": 49,
+      "type": "Gold",
+      "visibleCorners": 2,
+      "color": "Red",
+      "NE": "Parchment",
+      "SE": "Empty",
+      "SW": "NonVisible",
+      "NW": "NonVisible",
+      "points": 3,
+      "MushroomRequired": 3,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+
+
+    {
+      "id": 50,
+      "type": "Gold",
+      "visibleCorners": 2,
+      "color": "Red",
+      "NE": "NonVisible",
+      "SE": "NonVisible",
+      "SW": "Empty",
+      "NW": "Empty",
+      "points": 5,
+      "MushroomRequired": 5,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+
+
+    {
+      "id": 51,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Green",
+      "NE": "Empty",
+      "SE": "NonVisible",
+      "SW": "Empty",
+      "NW": "Feather",
+      "points": 1,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 1,
+      "WolfRequired": 0,
+      "LeafRequired": 2,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 1
+    },
+
+
+    {
+      "id": 52,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Green",
+      "NE": "Parchment",
+      "SE": "Empty",
+      "SW": "NonVisible",
+      "NW": "Empty",
+      "points": 1,
+      "MushroomRequired": 1,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 2,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 1,
+      "isFeatherRequired": 0
+    },
+
+
+    {
+      "id": 53,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Green",
+      "NE": "NonVisible",
+      "SE": "Empty",
+      "SW": "Potion",
+      "NW": "Empty",
+      "points": 1,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 1,
+      "LeafRequired": 2,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 1,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 54,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Green",
+      "NE": "Empty",
+      "SE": "Empty",
+      "SW": "Empty",
+      "NW": "NonVisible",
+      "points": 2,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 1,
+      "WolfRequired": 0,
+      "LeafRequired": 3,
+      "isCornerCoverageRequired": 1,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 55,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Green",
+      "NE": "Empty",
+      "SE": "NonVisible",
+      "SW": "Empty",
+      "NW": "Empty",
+      "points": 2,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 1,
+      "LeafRequired": 3,
+      "isCornerCoverageRequired": 1,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+
+    {
+      "id": 56,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Green",
+      "NE": "NonVisible",
+      "SE": "Empty",
+      "SW": "Empty",
+      "NW": "Empty",
+      "points": 2,
+      "MushroomRequired": 1,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 3,
+      "isCornerCoverageRequired": 1,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 57,
+      "type": "Gold",
+      "visibleCorners": 2,
+      "color": "Green",
+      "NE": "NonVisible",
+      "SE": "NonVisible",
+      "SW": "Feather",
+      "NW": "Empty",
+      "points": 3,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 3,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 58,
+      "type": "Gold",
+      "visibleCorners": 2,
+      "color": "Green",
+      "NE": "Empty",
+      "SE": "NonVisible",
+      "SW": "NonVisible",
+      "NW": "Parchment",
+      "points": 3,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 3,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+
+    {
+      "id": 59,
+      "type": "Gold",
+      "visibleCorners": 2,
+      "color": "Green",
+      "NE": "Potion",
+      "SE": "Empty",
+      "SW": "NonVisible",
+      "NW": "NonVisible",
+      "points": 3,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 3,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+
+    {
+      "id": 60,
+      "type": "Gold",
+      "visibleCorners": 2,
+      "color": "Green",
+      "NE": "Empty",
+      "SE": "NonVisible",
+      "SW": "NonVisible",
+      "NW": "Empty",
+      "points": 5,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 0,
+      "LeafRequired": 5,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+
+    {
+      "id": 61,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Blue",
+      "NE": "Empty",
+      "SE": "NonVisible",
+      "SW": "Empty",
+      "NW": "Potion",
+      "points": 1,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 1,
+      "WolfRequired": 2,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 1,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 62,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Blue",
+      "NE": "Empty",
+      "SE": "Parchment",
+      "SW": "Empty",
+      "NW": "NonVisible",
+      "points": 1,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 2,
+      "LeafRequired": 1,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 1,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 63,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Blue",
+      "NE": "NonVisible",
+      "SE": "Empty",
+      "SW": "Feather",
+      "NW": "Empty",
+      "points": 1,
+      "MushroomRequired": 1,
+      "ButterflyRequired": 0,
+      "WolfRequired": 2,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 1
+    },
+
+
+    {
+      "id": 64,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Blue",
+      "NE": "Empty",
+      "SE": "Empty",
+      "SW": "NonVisible",
+      "NW": "Empty",
+      "points": 2,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 1,
+      "WolfRequired": 3,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 1,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 65,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Blue",
+      "NE": "NonVisible",
+      "SE": "Empty",
+      "SW": "Empty",
+      "NW": "Empty",
+      "points": 2,
+      "MushroomRequired": 1,
+      "ButterflyRequired": 0,
+      "WolfRequired": 3,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 1,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 66,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Blue",
+      "NE": "Empty",
+      "SE": "Empty",
+      "SW": "Empty",
+      "NW": "NonVisible",
+      "points": 2,
+      "MushroomRequired":  0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 3,
+      "LeafRequired": 1,
+      "isCornerCoverageRequired": 1,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+
+
+
+    {
+      "id": 67,
+      "type": "Gold",
+      "visibleCorners": 2,
+      "color": "Blue",
+      "NE": "NonVisible",
+      "SE": "NonVisible",
+      "SW": "Parchment",
+      "NW": "Empty",
+      "points": 3,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 3,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+
+
+    {
+      "id": 68,
+      "type": "Gold",
+      "visibleCorners": 2,
+      "color": "Blue",
+      "NE": "Potion",
+      "SE": "NonVisible",
+      "SW": "NonVisible",
+      "NW": "Empty",
+      "points": 3,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 3,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+
+    {
+      "id": 69,
+      "type": "Gold",
+      "visibleCorners": 2,
+      "color": "Blue",
+      "NE": "Empty",
+      "SE": "Feather",
+      "SW": "NonVisible",
+      "NW": "NonVisible",
+      "points": 3,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 3,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+
+
+    {
+      "id": 70,
+      "type": "Gold",
+      "visibleCorners": 2,
+      "color": "Blue",
+      "NE": "Empty",
+      "SE": "Empty",
+      "SW": "NonVisible",
+      "NW": "NonVisible",
+      "points": 5,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 0,
+      "WolfRequired": 5,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+    {
+      "id": 71,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Purple",
+      "NE": "Feather",
+      "SE": "Empty",
+      "SW": "NonVisible",
+      "NW": "Empty",
+      "points": 1,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 2,
+      "WolfRequired": 0,
+      "LeafRequired": 1,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 1
+    },
+
+    {
+      "id": 72,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Purple",
+      "NE": "NonVisible",
+      "SE": "Empty",
+      "SW": "Parchment",
+      "NW": "Empty",
+      "points": 1,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 2,
+      "WolfRequired": 1,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 1,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 73,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Purple",
+      "NE": "Empty",
+      "SE": "Potion",
+      "SW": "Empty",
+      "NW": "NonVisible",
+      "points": 1,
+      "MushroomRequired": 1,
+      "ButterflyRequired": 2,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 1,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 74,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Purple",
+      "NE": "Empty",
+      "SE": "Empty",
+      "SW": "NonVisible",
+      "NW": "Empty",
+      "points": 2,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 3,
+      "WolfRequired": 1,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 1,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 75,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Purple",
+      "NE": "Empty",
+      "SE": "NonVisible",
+      "SW": "Empty",
+      "NW": "Empty",
+      "points": 2,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 3,
+      "WolfRequired": 0,
+      "LeafRequired": 1,
+      "isCornerCoverageRequired": 1,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 76,
+      "type": "Gold",
+      "visibleCorners": 3,
+      "color": "Purple",
+      "NE": "NonVisible",
+      "SE": "Empty",
+      "SW": "Empty",
+      "NW": "Empty",
+      "points": 2,
+      "MushroomRequired": 1,
+      "ButterflyRequired": 3,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 1,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 77,
+      "type": "Gold",
+      "visibleCorners": 2,
+      "color": "Purple",
+      "NE": "NonVisible",
+      "SE": "NonVisible",
+      "SW": "Empty",
+      "NW": "Potion",
+      "points": 3,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 3,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 78,
+      "type": "Gold",
+      "visibleCorners": 2,
+      "color": "Purple",
+      "NE": "Parchment",
+      "SE": "NonVisible",
+      "SW": "NonVisible",
+      "NW": "Empty",
+      "points": 3,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 3,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 79,
+      "type": "Gold",
+      "visibleCorners": 2,
+      "color": "Purple",
+      "NE": "NonVisible",
+      "SE": "Empty",
+      "SW": "Feather",
+      "NW": "NonVisible",
+      "points": 3,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 3,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    },
+
+    {
+      "id": 80,
+      "type": "Gold",
+      "visibleCorners": 2,
+      "color": "Purple",
+      "NE": "Empty",
+      "SE": "NonVisible",
+      "SW": "NonVisible",
+      "NW": "Empty",
+      "points": 5,
+      "MushroomRequired": 0,
+      "ButterflyRequired": 5,
+      "WolfRequired": 0,
+      "LeafRequired": 0,
+      "isCornerCoverageRequired": 0,
+      "isPotionRequired": 0,
+      "isParchmentRequired": 0,
+      "isFeatherRequired": 0
+    }
+  ]
+}
+
Index: target/classes/.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/.idea/.gitignore b/target/classes/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1711823696559)
+++ b/target/classes/.idea/.gitignore	(date 1711823696559)
@@ -0,0 +1,10 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
+# GitHub Copilot persisted chat sessions
+/copilot/chatSessions
Index: src/main/java/it/polimi/ingsw/model/EmptyStackException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/polimi/ingsw/model/EmptyStackException.java b/src/main/java/it/polimi/ingsw/model/EmptyStackException.java
new file mode 100644
--- /dev/null	(date 1711873031835)
+++ b/src/main/java/it/polimi/ingsw/model/EmptyStackException.java	(date 1711873031835)
@@ -0,0 +1,7 @@
+package it.polimi.ingsw.model;
+
+public class EmptyStackException extends RuntimeException {
+    public EmptyStackException() {
+        super("Illegal move attempted.");
+    }
+}
Index: target/classes/.idea/libraries/fasterxml_jackson_core_databind.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/.idea/libraries/fasterxml_jackson_core_databind.xml b/target/classes/.idea/libraries/fasterxml_jackson_core_databind.xml
new file mode 100644
--- /dev/null	(date 1711823696558)
+++ b/target/classes/.idea/libraries/fasterxml_jackson_core_databind.xml	(date 1711823696558)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="fasterxml.jackson.core.databind" type="repository">
+    <properties maven-id="com.fasterxml.jackson.core:jackson-databind:2.17.0" />
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/lib/jackson-databind-2.17.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/jackson-annotations-2.17.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/jackson-core-2.17.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lib/byte-buddy-1.14.9.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: target/classes/target/classes/.idea/workspace 2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/target/classes/.idea/workspace 2.xml b/target/classes/target/classes/.idea/workspace 2.xml
new file mode 100644
--- /dev/null	(date 1711823696542)
+++ b/target/classes/target/classes/.idea/workspace 2.xml	(date 1711823696542)
@@ -0,0 +1,239 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AnalysisUIOptions">
+    <option name="SCOPE_TYPE" value="3" />
+  </component>
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="a8ca864a-4374-415f-a864-e25a5b975bb9" name="Changes" comment="update following attributes's name conventions">
+      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/it/polimi/ingsw/model/CardsCollection.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/polimi/ingsw/model/CardsCollection.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/it/polimi/ingsw/model/Game.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/polimi/ingsw/model/Game.java" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Class" />
+      </list>
+    </option>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
+  </component>
+  <component name="ProjectColorInfo">{
+  &quot;associatedIndex&quot;: 6
+}</component>
+  <component name="ProjectId" id="2dajexXglWEJLRHYVzXz8kvU2e4" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "JUnit.PersonalBoardTest.executor": "Run",
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "git-widget-placeholder": "main",
+    "kotlin-language-version-configured": "true",
+    "last_opened_file_path": "/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "project.structure.last.edited": "Modules",
+    "project.structure.proportion": "0.15",
+    "project.structure.side.proportion": "0.2",
+    "settings.editor.selected.configurable": "project.propVCSSupport.Mappings",
+    "vue.rearranger.settings.migration": "true"
+  },
+  "keyToStringList": {
+    "GitStage.ChangesTree.GroupingKeys": [
+      "directory",
+      "module",
+      "repository"
+    ],
+    "com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File": [
+      "PLAIN_TEXT"
+    ]
+  }
+}]]></component>
+  <component name="RecentsManager">
+    <key name="CopyFile.RECENT_KEYS">
+      <recent name="$PROJECT_DIR$" />
+      <recent name="$PROJECT_DIR$/src/main/java/it/polimi/ingsw/model" />
+    </key>
+    <key name="MoveFile.RECENT_KEYS">
+      <recent name="$PROJECT_DIR$/database" />
+      <recent name="$PROJECT_DIR$" />
+    </key>
+  </component>
+  <component name="RunManager">
+    <configuration name="PersonalBoardTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="ing-sw-2024-pucci-santarossa-ruggieri-sciarretta" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="it.polimi.ingsw.model.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="it.polimi.ingsw.model" />
+      <option name="MAIN_CLASS_NAME" value="it.polimi.ingsw.model.PersonalBoardTest" />
+      <option name="TEST_OBJECT" value="class" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="JUnit.PersonalBoardTest" />
+      </list>
+    </recent_temporary>
+  </component>
+  <component name="SharedIndexes">
+    <attachedChunks>
+      <set>
+        <option value="jdk-21.0.2-openjdk-21.0.2-4caba194b151-322ed176" />
+      </set>
+    </attachedChunks>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="a8ca864a-4374-415f-a864-e25a5b975bb9" name="Changes" comment="" />
+      <created>1710253182823</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1710253182823</updated>
+      <workItem from="1710253183969" duration="957000" />
+      <workItem from="1710336795262" duration="599000" />
+      <workItem from="1710414764832" duration="9794000" />
+      <workItem from="1710520774093" duration="2046000" />
+      <workItem from="1710522835460" duration="3022000" />
+      <workItem from="1710687962069" duration="2270000" />
+      <workItem from="1710690510484" duration="3924000" />
+      <workItem from="1710694445343" duration="1311000" />
+      <workItem from="1710695764341" duration="317000" />
+      <workItem from="1710696590207" duration="754000" />
+      <workItem from="1710757312586" duration="601000" />
+      <workItem from="1710856230403" duration="1943000" />
+      <workItem from="1710861555715" duration="16175000" />
+      <workItem from="1711100665664" duration="571000" />
+      <workItem from="1711199299845" duration="713000" />
+      <workItem from="1711200029081" duration="1756000" />
+      <workItem from="1711269993636" duration="5090000" />
+    </task>
+    <task id="LOCAL-00001" summary="database iniziali delle carte risorsa, gold e template per carte starter">
+      <option name="closed" value="true" />
+      <created>1710428321439</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1710428321439</updated>
+    </task>
+    <task id="LOCAL-00002" summary="starterCardsFront">
+      <option name="closed" value="true" />
+      <created>1710522781060</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1710522781060</updated>
+    </task>
+    <task id="LOCAL-00003" summary="objectiveCardsFront">
+      <option name="closed" value="true" />
+      <created>1710524622519</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1710524622519</updated>
+    </task>
+    <task id="LOCAL-00004" summary="commonBoard implementation and CommonBoardNode definition and implementation">
+      <option name="closed" value="true" />
+      <created>1710693170287</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1710693170287</updated>
+    </task>
+    <task id="LOCAL-00005" summary="final CommonBoard + UML updated">
+      <option name="closed" value="true" />
+      <created>1710695698635</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1710695698635</updated>
+    </task>
+    <task id="LOCAL-00006" summary="deletion of the .drawio file">
+      <option name="closed" value="true" />
+      <created>1710696684518</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1710696684518</updated>
+    </task>
+    <task id="LOCAL-00007" summary="UPDATED 'points' DatabaseGameCard">
+      <option name="closed" value="true" />
+      <created>1710757766173</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1710757766173</updated>
+    </task>
+    <task id="LOCAL-00008" summary="update following attributes's name conventions">
+      <option name="closed" value="true" />
+      <created>1710857692265</created>
+      <option name="number" value="00008" />
+      <option name="presentableId" value="LOCAL-00008" />
+      <option name="project" value="LOCAL" />
+      <updated>1710857692265</updated>
+    </task>
+    <task id="LOCAL-00009" summary="draft end game, deck empty, Game">
+      <option name="closed" value="true" />
+      <created>1711037832082</created>
+      <option name="number" value="00009" />
+      <option name="presentableId" value="LOCAL-00009" />
+      <option name="project" value="LOCAL" />
+      <updated>1711037832082</updated>
+    </task>
+    <option name="localTasksCounter" value="10" />
+    <servers />
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="database iniziali delle carte risorsa, gold e template per carte starter" />
+    <MESSAGE value="starterCardsFront" />
+    <MESSAGE value="objectiveCardsFront" />
+    <MESSAGE value="commonBoard implementation and CommonBoardNode definition and implementation" />
+    <MESSAGE value="final CommonBoard + UML updated" />
+    <MESSAGE value="deletion of the .drawio file" />
+    <MESSAGE value="UPDATED 'points' DatabaseGameCard" />
+    <MESSAGE value="update following attributes's name conventions" />
+    <MESSAGE value="draft end game, deck empty, Game" />
+    <option name="LAST_COMMIT_MESSAGE" value="draft end game, deck empty, Game" />
+  </component>
+</project>
\ No newline at end of file
Index: src/test/java/it/polimi/ingsw/model/PersonalBoardTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.polimi.ingsw.model;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PersonalBoardTest {\n    private PersonalBoard personalBoard;\n\n    @BeforeEach\n    public void setup() {\n        personalBoard = new PersonalBoard(1000);\n    }\n\n    @Test\n    void testBruteForcePlaceCardSE() {\n\n        ResourceCard card = new ResourceCard(1, Orientation.FRONT, Color.BLUE);\n        int i = personalBoard.getDim1() / 2; // Specify the row index\n        int j = personalBoard.getDim2() / 2; // Specify the column index\n\n        personalBoard.bruteForcePlaceCardSE(card, i, j);\n\n        for (int k = 0; k < 2; k++) {\n            for (int h = 0; h < 2; h++) {\n                assertTrue(personalBoard.board[i + k][j + h].is_full);\n            }\n        }\n    }\n\n    @Test\n    void testPlaceCardAtSE() {\n\n        ResourceCard card1 = new ResourceCard(1, Orientation.FRONT, Color.BLUE);\n        ResourceCard card2 = new ResourceCard(2, Orientation.FRONT, Color.RED);\n        int i = personalBoard.getDim1() / 2; // Specify the row index\n        int j = personalBoard.getDim2() / 2; // Specify the column index\n\n        personalBoard.bruteForcePlaceCardSE(card1, i, j);\n\n        try {\n            personalBoard.placeCardAtSE(card1, card2);\n        } catch (IllegalMoveException e) {\n            fail(\"Exception should not be thrown\");\n        }\n\n        for (int k = 0; k < 2; k++) {\n            for (int h = 0; h < 2; h++) {\n                assertTrue(personalBoard.board[i + k][j + h].is_full);\n            }\n        }\n    }\n\n    @Test\n    void testPlaceCardAtNE() {\n\n        ResourceCard card1 = new ResourceCard(1, Orientation.FRONT, Color.BLUE);\n        ResourceCard card2 = new ResourceCard(2, Orientation.FRONT, Color.RED);\n        int i = personalBoard.getDim1() / 2; // Specify the row index\n        int j = personalBoard.getDim2() / 2; // Specify the column index\n\n        personalBoard.bruteForcePlaceCardSE(card1, i, j);\n\n        try {\n            personalBoard.placeCardAtNE(card1, card2);\n        } catch (IllegalMoveException e) {\n            fail(\"Exception should not be thrown\");\n        }\n\n        for (int k = 0; k < 2; k++) {\n            for (int h = 0; h < 2; h++) {\n                assertTrue(personalBoard.board[i + k][j + h].is_full);\n            }\n        }\n    }\n\n    @Test\n    void testPlaceCardAtSO() {\n\n            ResourceCard card1 = new ResourceCard(1, Orientation.FRONT, Color.BLUE);\n            ResourceCard card2 = new ResourceCard(2, Orientation.FRONT, Color.RED);\n            int i = personalBoard.getDim1() / 2; // Specify the row index\n            int j = personalBoard.getDim2() / 2; // Specify the column index\n\n            personalBoard.bruteForcePlaceCardSE(card1, i, j);\n\n            try {\n                personalBoard.placeCardAtSW(card1, card2);\n            } catch (IllegalMoveException e) {\n                fail(\"Exception should not be thrown\");\n            }\n\n            for (int k = 0; k < 2; k++) {\n                for (int h = 1; h >= 0; h--) {\n                    assertTrue(personalBoard.board[i + k][j + h].is_full);\n                }\n            }\n    }\n\n    @Test\n    void testPlaceCardOverlappingException_1() {\n\n        ResourceCard card1 = new ResourceCard(1, Orientation.FRONT, Color.BLUE);\n        ResourceCard card2 = new ResourceCard(2, Orientation.FRONT, Color.RED);\n        int i = personalBoard.getDim1() / 2; // Specify the row index\n        int j = personalBoard.getDim2() / 2; // Specify the column index\n\n        personalBoard.bruteForcePlaceCardSE(card1, i, j);\n\n        try {\n            personalBoard.placeCardAtSW(card1, card2);\n        } catch (IllegalMoveException e) {\n            fail(\"Exception should not be thrown\");\n        }\n\n        try {\n            personalBoard.placeCardAtSW(card1, card2);\n            fail(\"Exception should be thrown\");\n        } catch (IllegalMoveException e) {\n            assertEquals(\"Illegal move attempted.\", e.getMessage());\n        }\n\n    }\n\n    @Test\n    void testPlaceCardOverlappingException_2() {\n\n        ResourceCard card1 = new ResourceCard(1, Orientation.FRONT, Color.RED);\n        ResourceCard card2 = new ResourceCard(2, Orientation.FRONT, Color.RED);\n        ResourceCard card3 = new ResourceCard(3, Orientation.FRONT, Color.RED);\n        ResourceCard card4 = new ResourceCard(4, Orientation.FRONT, Color.RED);\n        int i = personalBoard.getDim1() / 2; // Specify the row index\n        int j = personalBoard.getDim2() / 2; // Specify the column index\n\n        personalBoard.bruteForcePlaceCardSE(card1, i, j);\n\n        try {\n            personalBoard.placeCardAtSW(card1, card2);\n        } catch (IllegalMoveException e) {\n            fail(\"Exception should not be thrown\");\n        }\n\n        try {\n            personalBoard.placeCardAtNW(card2, card3);\n        } catch (IllegalMoveException e) {\n            fail(\"Exception should not be thrown\");\n        }\n\n        try {\n            personalBoard.placeCardAtSE(card3, card4);\n            fail(\"Exception should be thrown\");\n        } catch (IllegalMoveException e) {\n            assertEquals(\"Illegal move attempted.\", e.getMessage());\n        }\n\n    }\n\n    @Test\n    void testCornerCoverage() {\n\n        Corner[][] filledCorner = new Corner[2][2];\n        for (int i = 0; i < 2; i++) {\n            for (int j = 0; j < 2; j++) {\n                filledCorner[i][j] = new Corner(new BoardCellCoordinate(i, j));\n                filledCorner[i][j].setCornerResource(Resource.MUSHROOM);\n            }\n        }\n\n        ResourceCard card1 = new ResourceCard(1, Orientation.FRONT, Color.BLUE);\n        ResourceCard card2 = new ResourceCard(2, Orientation.FRONT, Color.RED, 1, filledCorner);\n        ResourceCard card3 = new ResourceCard(3, Orientation.FRONT, Color.RED, 1, filledCorner);\n        ResourceCard card4 = new ResourceCard(4, Orientation.FRONT, Color.RED);\n        ResourceCard card5 = new ResourceCard(5, Orientation.BACK, Color.RED);\n\n        int i = personalBoard.getDim1() / 2; // Specify the row index\n        int j = personalBoard.getDim2() / 2; // Specify the column index\n\n        personalBoard.bruteForcePlaceCardSE(card1, i, j);\n\n        try {\n            personalBoard.placeCardAtSE(card1, card2);\n        } catch (IllegalMoveException e) {\n            fail(\"Exception should not be thrown\");\n        }\n\n        try {\n            personalBoard.placeCardAtNE(card1, card3);\n        } catch (IllegalMoveException e) {\n            fail(\"Exception should not be thrown\");\n        }\n\n        try {\n            personalBoard.placeCardAtSE(card3, card4);\n        } catch (IllegalMoveException e) {\n            fail(\"Exception should not be thrown\");\n        }\n\n        try {\n            personalBoard.placeCardAtNW(card1, card5);\n        } catch (IllegalMoveException e) {\n            fail(\"Exception should not be thrown\");\n        }\n\n        assertEquals(7, personalBoard.getNum_mushrooms());\n    }\n\n    @Test\n    void testGoldCardPointsUpdate() {\n\n        Corner[][] filledCorner1 = new Corner[2][2];\n        for (int i = 0; i < 2; i++) {\n            for (int j = 0; j < 2; j++) {\n                filledCorner1[i][j] = new Corner(new BoardCellCoordinate(0, 0));\n                filledCorner1[i][j].setCornerResource(Resource.MUSHROOM);\n            }\n        }\n\n        Corner[][] filledCorner2 = new Corner[2][2];\n        for (int i = 0; i < 2; i++) {\n            for (int j = 0; j < 2; j++) {\n                filledCorner2[i][j] = new Corner(new BoardCellCoordinate(0, 0));\n                filledCorner2[i][j].setCornerResource(Resource.LEAF);\n            }\n        }\n\n        personalBoard.addItem(Item.POTION);\n        personalBoard.addItem(Item.POTION);\n\n        ResourceCard card1 = new ResourceCard(1, Orientation.FRONT, Color.BLUE);\n        GoldCard card2 = new GoldCard(2, Orientation.FRONT, Color.RED, 2, filledCorner1);\n        GoldCard card3 = new GoldCard(3, Orientation.FRONT, Color.RED, 3, filledCorner2);\n\n        card2.setGoldCard(0, 0, 0, 0, true, false, false, false);\n        card3.setGoldCard(4, 0, 0, 0, false, true, false, false);\n\n\n        int i = personalBoard.getDim1() / 2; // Specify the row index\n        int j = personalBoard.getDim2() / 2; // Specify the column index\n\n        personalBoard.bruteForcePlaceCardSE(card1, i, j);\n\n        try {\n            personalBoard.placeCardAtSE(card1, card2);\n        } catch (IllegalMoveException e) {\n            fail(\"Exception should not be thrown\");\n        }\n\n        try {\n            personalBoard.placeCardAtNE(card2, card3);\n        } catch (IllegalMoveException e) {\n            fail(\"Exception should not be thrown\");\n        }\n\n        try {\n            personalBoard.placeCardAtNE(card1, card3);\n        } catch (IllegalMoveException e) {\n            assertEquals(\"Illegal move attempted.\", e.getMessage());\n        }\n\n        assertEquals(8, personalBoard.getPoints());\n\n    }\n\n    @Test\n    void testCalculateScoresObjectivePattern() {\n\n        ResourceCard card1 = new ResourceCard(1, Orientation.FRONT, Color.RED);\n        ResourceCard card2 = new ResourceCard(2, Orientation.FRONT, Color.RED);\n        ResourceCard card3 = new ResourceCard(3, Orientation.FRONT, Color.RED);\n        ResourceCard card4 = new ResourceCard(4, Orientation.FRONT, Color.RED);\n        ResourceCard card5 = new ResourceCard(5, Orientation.FRONT, Color.GREEN);\n        ResourceCard card6 = new ResourceCard(6, Orientation.FRONT, Color.GREEN);\n        ResourceCard card7 = new ResourceCard(7, Orientation.FRONT, Color.GREEN);\n        ResourceCard card8 = new ResourceCard(8, Orientation.FRONT, Color.GREEN);\n\n        int i = personalBoard.getDim1() / 2; // Specify the row index\n        int j = personalBoard.getDim2() / 2; // Specify the column index\n\n        personalBoard.bruteForcePlaceCardSE(card1, i, j);\n\n        personalBoard.placeCardAtSE(card1, card2);\n        personalBoard.placeCardAtSE(card2, card3);\n        personalBoard.placeCardAtSE(card3, card4);\n        personalBoard.placeCardAtSW(card4, card5);\n        personalBoard.placeCardAtSW(card5, card6);\n        personalBoard.placeCardAtSW(card6, card7);\n        personalBoard.placeCardAtSW(card7, card8);\n\n        DiagonalPatternObjectiveCard diagonalPatternObjectiveCard1 = new DiagonalPatternObjectiveCard(1, Orientation.FRONT, 1);\n        diagonalPatternObjectiveCard1.init_objDecreasingDiagonal(Color.GREEN);\n\n        DiagonalPatternObjectiveCard diagonalPatternObjectiveCard2 = new DiagonalPatternObjectiveCard(1, Orientation.FRONT, 1);\n        diagonalPatternObjectiveCard2.init_objIncreasingDiagonal(Color.RED);\n\n        assertEquals(2, diagonalPatternObjectiveCard1.calculateScore(personalBoard) +\n                diagonalPatternObjectiveCard2.calculateScore(personalBoard));\n\n    }\n\n    @Test\n    void testCalculateResourceItemObjective() {\n\n        Corner[][] filledCorner1 = new Corner[2][2];\n        for (int i = 0; i < 2; i++) {\n            for (int j = 0; j < 2; j++) {\n                filledCorner1[i][j] = new Corner(new BoardCellCoordinate(0, 0));\n                filledCorner1[i][j].setCornerResource(Resource.MUSHROOM);\n            }\n        }\n\n        Corner[][] filledCorner2 = new Corner[2][2];\n        for (int i = 0; i < 2; i++) {\n            for (int j = 0; j < 2; j++) {\n                filledCorner2[i][j] = new Corner(new BoardCellCoordinate(0, 0));\n                filledCorner2[i][j].setCornerItem(Item.POTION);\n            }\n        }\n\n        Corner[][] filledCorner3 = new Corner[2][2];\n        for (int i = 0; i < 2; i++) {\n            for (int j = 0; j < 2; j++) {\n                filledCorner3[i][j] = new Corner(new BoardCellCoordinate(0, 0));\n                filledCorner3[i][j].setCornerItem(Item.PARCHMENT);\n            }\n        }\n\n        Corner[][] filledCorner4 = new Corner[2][2];\n        for (int i = 0; i < 2; i++) {\n            for (int j = 0; j < 2; j++) {\n                filledCorner4[i][j] = new Corner(new BoardCellCoordinate(0, 0));\n                filledCorner4[i][j].setCornerItem(Item.FEATHER);\n            }\n        }\n\n        ResourceCard card1 = new ResourceCard(1, Orientation.FRONT, Color.RED);\n        ResourceCard card2 = new ResourceCard(2, Orientation.FRONT, Color.RED, 1, filledCorner1);\n        ResourceCard card3 = new ResourceCard(3, Orientation.FRONT, Color.RED, 1, filledCorner1);\n        ResourceCard card4 = new ResourceCard(4, Orientation.FRONT, Color.RED, 1, filledCorner1);\n        ResourceCard card5 = new ResourceCard(5, Orientation.FRONT, Color.GREEN, 1, filledCorner2);\n        ResourceCard card6 = new ResourceCard(6, Orientation.FRONT, Color.GREEN, 1, filledCorner2);\n        ResourceCard card7 = new ResourceCard(7, Orientation.FRONT, Color.GREEN, 1, filledCorner2);\n        ResourceCard card8 = new ResourceCard(8, Orientation.FRONT, Color.GREEN, 1, filledCorner2);\n        ResourceCard card9 = new ResourceCard(9, Orientation.FRONT, Color.GREEN, 1, filledCorner3);\n        ResourceCard card10 = new ResourceCard(10, Orientation.FRONT, Color.GREEN, 1, filledCorner4);\n\n        // After the placements, we have 9 mushrooms and 12 potions, 3 parchments and 3 feathers\n\n        int i = personalBoard.getDim1() / 2; // Specify the row index\n        int j = personalBoard.getDim2() / 2; // Specify the column index\n\n        personalBoard.bruteForcePlaceCardSE(card1, i, j);\n\n        personalBoard.placeCardAtSE(card1, card2);\n        personalBoard.placeCardAtSE(card2, card3);\n        personalBoard.placeCardAtSE(card3, card4);\n        personalBoard.placeCardAtSW(card4, card5);\n        personalBoard.placeCardAtSW(card5, card6);\n        personalBoard.placeCardAtSW(card6, card7);\n        personalBoard.placeCardAtSW(card7, card8);\n        personalBoard.placeCardAtSE(card8, card9);\n        personalBoard.placeCardAtSE(card9, card10);\n\n        ResourceObjectiveCard resourceObjectiveCard = new ResourceObjectiveCard(1, Orientation.FRONT, 2,\n                3, 0, 0, 0);\n\n        ItemObjectiveCard itemObjectiveCard = new ItemObjectiveCard(1, Orientation.FRONT, 3,\n                1, 1, 1);\n\n        assertEquals(15, resourceObjectiveCard.calculateScore(personalBoard) +\n                itemObjectiveCard.calculateScore(personalBoard));\n    }\n\n\n    // Add more tests for other methods\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/it/polimi/ingsw/model/PersonalBoardTest.java b/src/test/java/it/polimi/ingsw/model/PersonalBoardTest.java
--- a/src/test/java/it/polimi/ingsw/model/PersonalBoardTest.java	(revision d3b0d61aaabe5b7ebe1fee86a7352f6cda21bd39)
+++ b/src/test/java/it/polimi/ingsw/model/PersonalBoardTest.java	(date 1711873562327)
@@ -370,6 +370,5 @@
                 itemObjectiveCard.calculateScore(personalBoard));
     }
 
-
     // Add more tests for other methods
 }
\ No newline at end of file
Index: src/main/java/it/polimi/ingsw/model/CardsCollection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.polimi.ingsw.model;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Optional;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.io.File;\n\n\npublic  class CardsCollection {\n    public List<Card> cards;\n\n    public CardsCollection() {\n        cards = new ArrayList<>();\n    }\n\n    public void addCard(Card card) {\n        cards.add(card);\n    }\n\n    public int size() {\n        return cards.size();\n    }\n\n    /**\n     * To do: populateDeck read a .json file and populate the data structure using\n     * the constructors and the setters of Card subclasses.\n     */\n    // In this case we are creating only the FRONT, but we need also the back of the card.\n    public void populateDeck(String jsonFilePath, String type) {\n        ObjectMapper objectMapper = new ObjectMapper();\n        try {\n            JsonNode rootNode = objectMapper.readTree(new File(jsonFilePath));\n            JsonNode cardsNode = rootNode.path(\"cards\");\n\n            for (JsonNode cardNode : cardsNode) {\n\n                int id = cardNode.path(\"id\").asInt();\n                String colorStr = cardNode.path(\"color\").asText();\n                Color color = Color.valueOf(colorStr.toUpperCase());\n                Orientation orientation = Orientation.FRONT;\n                int score = cardNode.path(\"points\").asInt();\n\n                // This is the case where we have to create a ResourceCard.\n                // NE corner.\n                Corner[][] actual_corners = new Corner[2][2];\n                String NE_corner_content = cardNode.path(\"NE\").asText();\n                if (NE_corner_content.equals(\"NonVisible\")) {\n                    actual_corners[0][1].is_visible = false;\n                } else {\n                        actual_corners[0][1].setCornerResource(Resource.valueOf(NE_corner_content.toUpperCase()));\n                }\n                // SE Corner.\n                String SE_corner_content = cardNode.path(\"SE\").asText();\n                if (SE_corner_content.equals(\"NonVisible\")) {\n                    actual_corners[1][0].is_visible = false;\n                } else {\n                        actual_corners[1][0].setCornerResource(Resource.valueOf(SE_corner_content.toUpperCase()));\n                }\n                // NO corner.\n                String NO_corner_content = cardNode.path(\"NO\").asText();\n                if (NO_corner_content.equals(\"NonVisible\")) {\n                    actual_corners[0][0].is_visible = false;\n                } else {\n                        actual_corners[0][0].setCornerResource(Resource.valueOf(NO_corner_content.toUpperCase()));\n                }\n                // SO corner.\n                String SO_corner_content = cardNode.path(\"SO\").asText();\n                if (SO_corner_content.equals(\"NonVisible\")) {\n                    actual_corners[1][1].is_visible = false;\n                } else {\n                        actual_corners[1][1].setCornerResource(Resource.valueOf(SO_corner_content.toUpperCase()));\n                }\n\n                if (cardNode.path(\"type\").asText().equals(\"Resource\") && type.equals(\"Resource\")){\n                    ResourceCard card = new ResourceCard(id, orientation, color, score, actual_corners);\n                    // Qui potresti settare ulteriori proprietà specifiche per ResourceCard\n                    this.addCard(card);\n                }\n\n                if (cardNode.path(\"type\").asText().equals(\"Gold\") && type.equals(\"Gold\")){\n                    //TODO: cambia gli attributi di GoldCard, leggi int metti boolean nei nuovi attributi.\n                    int MushroomRequired = cardNode.path(\"MushroomRequired\").asInt();\n                    int ButterflyRequired = cardNode.path(\"ButterflyRequired\").asInt();\n                    int WolfRequired = cardNode.path(\"WolfRequired\").asInt();\n                    int LeafRequired = cardNode.path(\"LeafRequired\").asInt();\n\n                    // Item_for_score\n                    int PotionCount = cardNode.path(\"PotionCount\").asInt();\n                    int FeatherCount = cardNode.path(\"FeatherCount\").asInt();\n                    int ParchmentCount = cardNode.path(\"ParchmentCount\").asInt();\n                    int CoverCorners = cardNode.path(\"CoverCorners\").asInt();\n\n                    // Problem: Item optional!\n                    Optional<Item> item_for_score = Optional.empty();\n                    if (PotionCount == 1) {\n                        item_for_score = Optional.of(Item.POTION);\n                    }\n                    if (FeatherCount == 1) {\n                        item_for_score = Optional.of(Item.FEATHER);\n                    }\n                    if (ParchmentCount == 1) {\n                        item_for_score = Optional.of(Item.PARCHMENT);\n                    }\n\n                    GoldCard gold_card = new GoldCard(id, orientation, color);\n                    //gold_card.setGoldCard(item_for_score, CoverCorners, MushroomRequired, LeafRequired, ButterflyRequired, WolfRequired);\n                    this.addCard(gold_card);\n                }\n            }\n            System.out.println(\"Deck populated successfully.\");\n        } catch (Exception e) {\n            System.err.println(\"Error populating deck: \" + e.getMessage());\n        }\n    }\n\n    // populate objective cards draft\n    public void populateDeckObjective(String jsonFilePath) {\n        ObjectMapper objectMapper = new ObjectMapper();\n        try {\n            JsonNode rootNode = objectMapper.readTree(new File(jsonFilePath));\n            JsonNode cardsNode = rootNode.path(\"cards\");\n\n            for (JsonNode cardNode : cardsNode) {\n\n                int id = cardNode.path(\"id\").asInt();\n                Orientation orientation = Orientation.FRONT;\n                int points = cardNode.path(\"points\").asInt();\n                String pattern = cardNode.path(\"pattern\").asText();\n               // System.out.println(pattern);\n                if (pattern.equals(\"L\")) {\n                    System.out.println(\"L pattern\");\n                    LetterPatternObjectiveCard card = new LetterPatternObjectiveCard(id, orientation, points);\n                    card.init_obj_L();\n                    // come si implementa?? come si collegano??\n                    this.addCard(card);\n                }\n                if (pattern.equals(\"J\")) {\n                    System.out.println(\"J pattern\");\n                    LetterPatternObjectiveCard card = new LetterPatternObjectiveCard(id, orientation, points);\n                    card.init_obj_J();\n                    this.addCard(card);\n                }\n                if (pattern.equals(\"P\")) {\n                    System.out.println(\"P pattern\");\n                    LetterPatternObjectiveCard card = new LetterPatternObjectiveCard(id, orientation, points);\n                    this.addCard(card);\n                }\n                if (pattern.equals(\"Q\")) {\n                    System.out.println(\"Q pattern\");\n                    LetterPatternObjectiveCard card = new LetterPatternObjectiveCard(id, orientation, points);\n                    card.init_obj_q();\n                    this.addCard(card);\n                }\n                if (pattern.equals(\"increasing_diagonal\")) {\n                    DiagonalPatternObjectiveCard card = new DiagonalPatternObjectiveCard(id, orientation, points);\n                    String color = cardNode.path(\"color1\").asText();\n                    System.out.println(card.toString());  // Print the color string\n                    card.init_objIncreasingDiagonal(Color.valueOf(color.toUpperCase()));\n                    this.addCard(card);\n                }\n                if (pattern.equals(\"decreasing_diagonal\")) {\n                    DiagonalPatternObjectiveCard card = new DiagonalPatternObjectiveCard(id, orientation, points);\n                    String color = cardNode.path(\"color1\").asText();\n                    System.out.println(card.toString());\n                    card.init_objDecreasingDiagonal(Color.valueOf(color.toUpperCase()));\n                    this.addCard(card);\n                }\n                if (pattern.equals(\"None\")) {\n                   int num_feathers = cardNode.path(\"numFeathers\").asInt();\n                   int num_potions = cardNode.path(\"numPotions\").asInt();\n                   int num_parchments = cardNode.path(\"numParchments\").asInt();\n                   int num_mushrooms = cardNode.path(\"numMushrooms\").asInt();\n                   int num_leaves = cardNode.path(\"numLeaves\").asInt();\n                   int num_butterflies = cardNode.path(\"numButterflies\").asInt();\n                   int num_wolves = cardNode.path(\"numWolves\").asInt();\n\n                   if(num_feathers != 0 || num_potions != 0 || num_parchments != 0) {\n                       ItemObjectiveCard card = new ItemObjectiveCard(id, orientation, points, num_feathers, num_potions, num_parchments);\n                       System.out.println(\"item objective card\");\n                       this.addCard(card);\n                   } else {\n                       ResourceObjectiveCard card = new ResourceObjectiveCard(id, orientation, points, num_mushrooms, num_leaves, num_butterflies, num_wolves);\n                       System.out.println(\"Resource objective card\");\n                       this.addCard(card);\n                   }\n                }\n            }\n            System.out.println(\"Objective cards Deck populated successfully.\");\n        } catch (Exception e) {\n            System.err.println(\"Error populating objective cards deck: \" + e.getMessage());\n        }\n    }\n\n    // populate starter cards draft: it create the starter card collection, both front and back of the card. At the end\n    // we have a collections of starter cards, that has size X2.\n\n    // Remark: at the moment the same deck has both front and back of stater cards. Use the flag Orientation.\n    public void populateDeckStarterFrontAndBack(String jsonFilePath) {\n        ObjectMapper objectMapper = new ObjectMapper();\n        try {\n            JsonNode rootNode = objectMapper.readTree(new File(jsonFilePath));\n            JsonNode cardsNode = rootNode.path(\"cards\");\n\n            for (JsonNode cardNode : cardsNode) {\n                int id = cardNode.path(\"id\").asInt();\n                String permanent_resource1 = cardNode.path(\"permanentResource1\").asText();\n                String permanent_resource2 = cardNode.path(\"permanentResource2\").asText();\n                String permanent_resource3 = cardNode.path(\"permanentResource3\").asText();\n                int front_visible_corner = cardNode.path(\"frontVisibleCorner\").asInt();\n                String front_NE= cardNode.path(\"frontNE\").asText();\n                String front_SE = cardNode.path(\"frontSE\").asText();\n                String front_NO = cardNode.path(\"frontNW\").asText();\n                String front_SO = cardNode.path(\"frontSW\").asText();\n                int back_visible_corner = cardNode.path(\"backVisibleCorner\").asInt();\n                String back_NE= cardNode.path(\"backNE\").asText();\n                String back_SE = cardNode.path(\"backSE\").asText();\n                String back_NO = cardNode.path(\"backNW\").asText();\n                String back_SO = cardNode.path(\"backSW\").asText();\n\n                StarterCard card_front = new StarterCard(id, Orientation.FRONT);\n                Corner[][] actual_corners_front = new Corner[2][2];\n                // Inizializza l'array di Corner\n                for (int i = 0; i < 2; i++) {\n                    for (int j = 0; j < 2; j++) {\n                        actual_corners_front[i][j] = new Corner();\n                    }\n                }\n                // Front of the Starter Card\n                if (front_NE.equals(\"NonVisible\")) {\n                    actual_corners_front[0][1].is_visible = false;\n                } else {\n                    if(!front_NE.equals(\"Empty\")){\n                        System.out.println(actual_corners_front[0][1].resource);\n                        actual_corners_front[0][1].setCornerResource(Resource.valueOf(front_NE.toUpperCase()));}\n                }\n                if (front_SE.equals(\"NonVisible\")) {\n                    actual_corners_front[1][0].is_visible = false;\n                } else {\n                    if (!front_SE.equals(\"Empty\")) {\n                        actual_corners_front[1][0].setCornerResource(Resource.valueOf(front_SE.toUpperCase()));\n                    }\n                }\n                if (front_NO.equals(\"NonVisible\")) {\n                    actual_corners_front[0][0].is_visible = false;\n                } else {\n                    if(!front_NO.equals(\"Empty\")){\n                    actual_corners_front[0][0].setCornerResource(Resource.valueOf(front_NO.toUpperCase()));}\n                }\n                if (front_SO.equals(\"NonVisible\")) {\n                    actual_corners_front[1][1].is_visible = false;\n                } else {\n                    if(!front_SO.equals(\"Empty\")){\n                    actual_corners_front[1][1].setCornerResource(Resource.valueOf(front_SO.toUpperCase()));}\n                }\n                // Back of Starter Card\n                StarterCard card_back = new StarterCard(id, Orientation.BACK);\n                Corner[][] actual_corners_back = new Corner[2][2];\n                for (int i = 0; i < 2; i++) {\n                    for (int j = 0; j < 2; j++) {\n                        actual_corners_back[i][j] = new Corner();\n                    }\n                }\n                if (back_NE.equals(\"NonVisible\")) {\n                    actual_corners_back[0][1].is_visible = false;\n                } else {\n                    actual_corners_back[0][1].setCornerResource(Resource.valueOf(back_NE.toUpperCase()));}\n                if (back_SE.equals(\"NonVisible\")) {\n                    actual_corners_back[1][0].is_visible = false;\n                } else {\n                    actual_corners_back[1][0].setCornerResource(Resource.valueOf(back_SE.toUpperCase()));}\n                if (back_NO.equals(\"NonVisible\")) {\n                    actual_corners_back[0][0].is_visible = false;\n                } else {\n                    actual_corners_back[0][0].setCornerResource(Resource.valueOf(back_NO.toUpperCase()));}\n                if (back_SO.equals(\"NonVisible\")) {\n                    actual_corners_back[1][1].is_visible = false;\n                } else {\n                    actual_corners_back[1][1].setCornerResource(Resource.valueOf(back_SO.toUpperCase()));}\n\n                // Remark: read carefully the Starter Card class. Here we create at the same moment two cards:\n                // the first that is the front, and the second one is the back of the same card.\n                // But they are two different objects, they have in common the same id!\n\n                if(\"NULL\".equals(permanent_resource2.toUpperCase()) && \"NULL\".equals(permanent_resource3.toUpperCase())) {\n                    card_front.setStarterCardFront(Resource.valueOf(permanent_resource1.toUpperCase()),\n                            null,\n                            null,\n                            actual_corners_front);\n                    this.addCard(card_front);\n                    System.out.println(card_front.toString());\n                } else if (\"NULL\".equals(permanent_resource3.toUpperCase())) {\n                    card_front.setStarterCardFront(Resource.valueOf(permanent_resource1.toUpperCase()),\n                            Resource.valueOf(permanent_resource2.toUpperCase()),\n                            null,\n                            actual_corners_front);\n                    this.addCard(card_front);\n                    System.out.println(card_front.toString());\n                } else {\n                    card_front.setStarterCardFront(Resource.valueOf(permanent_resource1.toUpperCase()),\n                            Resource.valueOf(permanent_resource2.toUpperCase()),\n                            Resource.valueOf(permanent_resource3.toUpperCase()),\n                            actual_corners_front);\n                    this.addCard(card_front);\n                    System.out.println(card_front.toString());\n                }\n                card_back.setStarterCardBack(actual_corners_back);\n                this.addCard(card_back);\n                System.out.println(card_back.toString());\n            }\n            System.out.println(\"Starter cards Deck populated successfully.\");\n        } catch (Exception e) {\n            System.err.println(\"Error populating starter cards deck: \" + e.getMessage());\n        }\n\n    }\n\n\n    }\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/polimi/ingsw/model/CardsCollection.java b/src/main/java/it/polimi/ingsw/model/CardsCollection.java
--- a/src/main/java/it/polimi/ingsw/model/CardsCollection.java	(revision d3b0d61aaabe5b7ebe1fee86a7352f6cda21bd39)
+++ b/src/main/java/it/polimi/ingsw/model/CardsCollection.java	(date 1711874877052)
@@ -50,28 +50,28 @@
                 if (NE_corner_content.equals("NonVisible")) {
                     actual_corners[0][1].is_visible = false;
                 } else {
-                        actual_corners[0][1].setCornerResource(Resource.valueOf(NE_corner_content.toUpperCase()));
+                    actual_corners[0][1].setCornerResource(Resource.valueOf(NE_corner_content.toUpperCase()));
                 }
                 // SE Corner.
                 String SE_corner_content = cardNode.path("SE").asText();
                 if (SE_corner_content.equals("NonVisible")) {
                     actual_corners[1][0].is_visible = false;
                 } else {
-                        actual_corners[1][0].setCornerResource(Resource.valueOf(SE_corner_content.toUpperCase()));
+                    actual_corners[1][0].setCornerResource(Resource.valueOf(SE_corner_content.toUpperCase()));
                 }
                 // NO corner.
                 String NO_corner_content = cardNode.path("NO").asText();
                 if (NO_corner_content.equals("NonVisible")) {
                     actual_corners[0][0].is_visible = false;
                 } else {
-                        actual_corners[0][0].setCornerResource(Resource.valueOf(NO_corner_content.toUpperCase()));
+                    actual_corners[0][0].setCornerResource(Resource.valueOf(NO_corner_content.toUpperCase()));
                 }
                 // SO corner.
                 String SO_corner_content = cardNode.path("SO").asText();
                 if (SO_corner_content.equals("NonVisible")) {
                     actual_corners[1][1].is_visible = false;
                 } else {
-                        actual_corners[1][1].setCornerResource(Resource.valueOf(SO_corner_content.toUpperCase()));
+                    actual_corners[1][1].setCornerResource(Resource.valueOf(SO_corner_content.toUpperCase()));
                 }
 
                 if (cardNode.path("type").asText().equals("Resource") && type.equals("Resource")){
@@ -129,7 +129,7 @@
                 Orientation orientation = Orientation.FRONT;
                 int points = cardNode.path("points").asInt();
                 String pattern = cardNode.path("pattern").asText();
-               // System.out.println(pattern);
+                // System.out.println(pattern);
                 if (pattern.equals("L")) {
                     System.out.println("L pattern");
                     LetterPatternObjectiveCard card = new LetterPatternObjectiveCard(id, orientation, points);
@@ -169,23 +169,23 @@
                     this.addCard(card);
                 }
                 if (pattern.equals("None")) {
-                   int num_feathers = cardNode.path("numFeathers").asInt();
-                   int num_potions = cardNode.path("numPotions").asInt();
-                   int num_parchments = cardNode.path("numParchments").asInt();
-                   int num_mushrooms = cardNode.path("numMushrooms").asInt();
-                   int num_leaves = cardNode.path("numLeaves").asInt();
-                   int num_butterflies = cardNode.path("numButterflies").asInt();
-                   int num_wolves = cardNode.path("numWolves").asInt();
+                    int num_feathers = cardNode.path("numFeathers").asInt();
+                    int num_potions = cardNode.path("numPotions").asInt();
+                    int num_parchments = cardNode.path("numParchments").asInt();
+                    int num_mushrooms = cardNode.path("numMushrooms").asInt();
+                    int num_leaves = cardNode.path("numLeaves").asInt();
+                    int num_butterflies = cardNode.path("numButterflies").asInt();
+                    int num_wolves = cardNode.path("numWolves").asInt();
 
-                   if(num_feathers != 0 || num_potions != 0 || num_parchments != 0) {
-                       ItemObjectiveCard card = new ItemObjectiveCard(id, orientation, points, num_feathers, num_potions, num_parchments);
-                       System.out.println("item objective card");
-                       this.addCard(card);
-                   } else {
-                       ResourceObjectiveCard card = new ResourceObjectiveCard(id, orientation, points, num_mushrooms, num_leaves, num_butterflies, num_wolves);
-                       System.out.println("Resource objective card");
-                       this.addCard(card);
-                   }
+                    if(num_feathers != 0 || num_potions != 0 || num_parchments != 0) {
+                        ItemObjectiveCard card = new ItemObjectiveCard(id, orientation, points, num_feathers, num_potions, num_parchments);
+                        System.out.println("item objective card");
+                        this.addCard(card);
+                    } else {
+                        ResourceObjectiveCard card = new ResourceObjectiveCard(id, orientation, points, num_mushrooms, num_leaves, num_butterflies, num_wolves);
+                        System.out.println("Resource objective card");
+                        this.addCard(card);
+                    }
                 }
             }
             System.out.println("Objective cards Deck populated successfully.");
@@ -247,13 +247,13 @@
                     actual_corners_front[0][0].is_visible = false;
                 } else {
                     if(!front_NO.equals("Empty")){
-                    actual_corners_front[0][0].setCornerResource(Resource.valueOf(front_NO.toUpperCase()));}
+                        actual_corners_front[0][0].setCornerResource(Resource.valueOf(front_NO.toUpperCase()));}
                 }
                 if (front_SO.equals("NonVisible")) {
                     actual_corners_front[1][1].is_visible = false;
                 } else {
                     if(!front_SO.equals("Empty")){
-                    actual_corners_front[1][1].setCornerResource(Resource.valueOf(front_SO.toUpperCase()));}
+                        actual_corners_front[1][1].setCornerResource(Resource.valueOf(front_SO.toUpperCase()));}
                 }
                 // Back of Starter Card
                 StarterCard card_back = new StarterCard(id, Orientation.BACK);
@@ -316,6 +316,4 @@
         }
 
     }
-
-
-    }
+}
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1711822892378)
+++ b/.idea/modules.xml	(date 1711822892378)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta.iml" filepath="$PROJECT_DIR$/.idea/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/CardsCollection.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Cell.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/ConcreteDeck.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/ResourceCard.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Player.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/PersonalBoard.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Color.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/GoldCard.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Game.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Corner.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/StarterCard.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/ItemObjectiveCard.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/CommonBoard.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Coordinate.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/LetterPatternScoreStrategy.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Item.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/LetterPatternObjectiveCard.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/DiagonalPatternObjectiveCard.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/DeckFactory.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/BoardCellCoordinate.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/DiagonalPatternScoreStrategy.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Orientation.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/IllegalMoveException.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/CommonBoardNode.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/ObjectiveCard.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/ResourceObjectiveCard.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Resource.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Card.java\n/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/ScoreStrategy.java\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst b/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
--- a/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst	(revision d3b0d61aaabe5b7ebe1fee86a7352f6cda21bd39)
+++ b/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst	(date 1711877102785)
@@ -1,29 +1,30 @@
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/CardsCollection.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Cell.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/ConcreteDeck.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/ResourceCard.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Player.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/PersonalBoard.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Color.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/GoldCard.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Game.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Corner.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/StarterCard.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/ItemObjectiveCard.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/CommonBoard.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Coordinate.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/LetterPatternScoreStrategy.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Item.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/LetterPatternObjectiveCard.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/DiagonalPatternObjectiveCard.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/DeckFactory.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/BoardCellCoordinate.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/DiagonalPatternScoreStrategy.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Orientation.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/IllegalMoveException.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/CommonBoardNode.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/ObjectiveCard.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/ResourceObjectiveCard.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Resource.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Card.java
-/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/ScoreStrategy.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Corner.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/PersonalBoard.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/DeckFactory.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Orientation.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/GoldCard.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Game.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/ItemObjectiveCard.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Coordinate.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/IllegalMoveException.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/DiagonalPatternObjectiveCard.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Item.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Color.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/CommonBoardNode.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/ConcreteDeck.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/CardsCollection.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Resource.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/LetterPatternObjectiveCard.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/EmptyStackException.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/ResourceObjectiveCard.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/CommonBoard.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/StarterCard.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/ObjectiveCard.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/ScoreStrategy.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/DiagonalPatternScoreStrategy.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Card.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Player.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/BoardCellCoordinate.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/LetterPatternScoreStrategy.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/Cell.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/main/java/it/polimi/ingsw/model/ResourceCard.java
Index: target/classes/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/.idea/misc.xml b/target/classes/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1711823696594)
+++ b/target/classes/.idea/misc.xml	(date 1711823696594)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="JavadocGenerationManager">
+    <option name="OUTPUT_DIRECTORY" value="$USER_HOME$" />
+  </component>
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="openjdk-21" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: src/test/java/it/polimi/ingsw/model/CommonBoardNodeTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/it/polimi/ingsw/model/CommonBoardNodeTest.java b/src/test/java/it/polimi/ingsw/model/CommonBoardNodeTest.java
new file mode 100644
--- /dev/null	(date 1711877101207)
+++ b/src/test/java/it/polimi/ingsw/model/CommonBoardNodeTest.java	(date 1711877101207)
@@ -0,0 +1,36 @@
+package it.polimi.ingsw.model;
+
+import org.junit.jupiter.api.BeforeEach;
+import org.junit.jupiter.api.Test;
+import static org.junit.jupiter.api.Assertions.*;
+
+public class CommonBoardNodeTest {
+    private CommonBoardNode node;
+
+    @BeforeEach
+    public void setUp() {
+        node = new CommonBoardNode(1);
+    }
+
+    @Test
+    public void testSetPlayer() {
+        node.setPlayer(2, true);
+        assertTrue(node.isPlayerPresent(2));
+    }
+
+    @Test
+    public void testIsPlayerPresent() {
+        node.setPlayer(1, true);
+        assertTrue(node.isPlayerPresent(1));
+    }
+
+    @Test
+    public void testIsPlayerNotPresent() {
+        assertFalse(node.isPlayerPresent(3));
+    }
+
+    @Test
+    public void testGetNodeNumber() {
+        assertEquals(1, node.getNodeNumber());
+    }
+}
Index: target/classes/database/databaseStarterCards.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/database/databaseStarterCards.json b/target/classes/database/databaseStarterCards.json
new file mode 100644
--- /dev/null	(date 1711823696540)
+++ b/target/classes/database/databaseStarterCards.json	(date 1711823696540)
@@ -0,0 +1,115 @@
+
+{
+  "cards": [
+    {
+      "id": 81,
+      "type": "Starter",
+      "permanentResource1": "Butterfly",
+      "permanentResource2": null,
+      "permanentResource3": null,
+      "frontVisibleCorners": 4,
+      "frontNE": "Leaf",
+      "frontSE": "Empty",
+      "frontSW": "Butterfly",
+      "frontNW": "Empty",
+      "backVisibleCorners": 4,
+      "backNE": "Leaf",
+      "backSE": "Wolf",
+      "backSW": "Butterfly",
+      "backNW": "Mushroom"
+    },
+
+    {
+      "id": 82,
+      "type": "Starter",
+      "permanentResource1": "Mushroom",
+      "permanentResource2": null,
+      "permanentResource3": null,
+      "frontVisibleCorners": 4,
+      "frontNE": "Empty",
+      "frontSE": "Mushroom",
+      "frontSW": "Empty",
+      "frontNW": "Wolf",
+      "backVisibleCorners": 4,
+      "backNE": "Wolf",
+      "backSE": "Butterfly",
+      "backSW": "Mushroom",
+      "backNW": "Leaf"
+    },
+
+    {
+      "id": 83,
+      "type": "Starter",
+      "permanentResource1": "Leaf",
+      "permanentResource2": "Mushroom",
+      "permanentResource3": null,
+      "frontVisibleCorners": 4,
+      "frontNE": "Empty",
+      "frontSE": "Empty",
+      "frontSW": "Empty",
+      "frontNW": "Empty",
+      "backVisibleCorners": 4,
+      "backNE": "Wolf",
+      "backSE": "Leaf",
+      "backSW": "Mushroom",
+      "backNW": "Butterfly"
+    },
+
+
+    {
+      "id": 84,
+      "type": "Starter",
+      "permanentResource1": "Wolf",
+      "permanentResource2": "Butterfly",
+      "permanentResource3": null,
+      "frontVisibleCorners": 4,
+      "frontNE": "Empty",
+      "frontSE": "Empty",
+      "frontSW": "Empty",
+      "frontNW": "Empty",
+      "backVisibleCorners": 4,
+      "backNE": "Butterfly",
+      "backSE": "Mushroom",
+      "backSW": "Wolf",
+      "backNW": "Leaf"
+    },
+
+
+
+    {
+      "id": 85,
+      "type": "Starter",
+      "permanentResource1": "Wolf",
+      "permanentResource2": "Butterfly",
+      "permanentResource3": "Leaf",
+      "frontVisibleCorners": 2,
+      "frontNE": "Empty",
+      "frontSE": "NonVisible",
+      "frontSW": "NonVisible",
+      "frontNW": "Empty",
+      "backVisibleCorners": 4,
+      "backNE": "Mushroom",
+      "backSE": "Wolf",
+      "backSW": "Leaf",
+      "backNW": "Butterfly"
+    },
+
+    {
+      "id": 86,
+      "type": "Starter",
+      "permanentResource1": "Leaf",
+      "permanentResource2": "Wolf",
+      "permanentResource3": "Mushroom",
+      "frontVisibleCorners": 2,
+      "frontNE": "Empty",
+      "frontSE": "NonVisible",
+      "frontSW": "NonVisible",
+      "frontNW": "Empty",
+      "backVisibleCorners": 4,
+      "backNE": "Wolf",
+      "backSE": "Butterfly",
+      "backSW": "Leaf",
+      "backNW": "Mushroom"
+    }
+  ]
+}
Index: src/test/java/it/polimi/ingsw/model/CardsCollectionTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.polimi.ingsw.model;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CardsCollectionTest {\n    private CardsCollection cardsCollection;\n\n    @BeforeEach\n    public void setup() {\n        cardsCollection = new CardsCollection();\n    }\n\n    @Test\n    public void testAddCard() {\n        Card card = new ResourceCard(1, Orientation.FRONT, Color.BLUE);\n        cardsCollection.addCard(card);\n        assertEquals(1, cardsCollection.size());\n    }\n\n    @Test\n    public void testSize() {\n        assertEquals(0, cardsCollection.size());\n        Card card = new ResourceCard(1, Orientation.FRONT, Color.BLUE);\n        cardsCollection.addCard(card);\n        assertEquals(1, cardsCollection.size());\n    }\n\n//    @Test\n//    public void testPopulateDeck() {\n//        // Assume that `cards.json` is a valid JSON file in the `src/test/resources` directory\n//        String jsonFilePath = \"ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/database/databaseGameCards.json\";\n//\n//        int initialSize = cardsCollection.size();\n//\n//        // Call the method under test\n//        cardsCollection.populateDeck(jsonFilePath, \"Resource\");\n//\n//        // Check that cards have been added to the collection\n//        //assertTrue(cardsCollection.size() =  40);\n//    }\n    // Add more tests for other methods\n    @Test\n    public void testPopulateDeckObjectiveCard() {\n        // Assume that `cards.json` is a valid JSON file in the `src/test/resources` directory\n        String jsonFilePath = \"/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/database/databaseObjectiveCards.json\";\n\n        int initialSize = cardsCollection.size();\n\n        // Call the method under test\n        cardsCollection.populateDeckObjective(jsonFilePath);\n\n        // Check that cards have been added to the collection\n        assertTrue(cardsCollection.size()  ==  16);\n    }\n\n    @Test\n    public void testPopulateDeckStarterFrontAndBack() {\n        // Assume that `starterCards.json` is a valid JSON file in the `src/test/resources` directory\n        String jsonFilePath = \"/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/database/databaseStarterCards.json\";\n\n        int initialSize = cardsCollection.size();\n\n        // Call the method under test\n        cardsCollection.populateDeckStarterFrontAndBack(jsonFilePath);\n\n        // Check that cards have been added to the collection\n        assertTrue(cardsCollection.size() > 0);\n    }\n\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/it/polimi/ingsw/model/CardsCollectionTest.java b/src/test/java/it/polimi/ingsw/model/CardsCollectionTest.java
--- a/src/test/java/it/polimi/ingsw/model/CardsCollectionTest.java	(revision d3b0d61aaabe5b7ebe1fee86a7352f6cda21bd39)
+++ b/src/test/java/it/polimi/ingsw/model/CardsCollectionTest.java	(date 1711873562336)
@@ -30,7 +30,7 @@
 //    @Test
 //    public void testPopulateDeck() {
 //        // Assume that `cards.json` is a valid JSON file in the `src/test/resources` directory
-//        String jsonFilePath = "ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/database/databaseGameCards.json";
+//        String jsonFilePath = "/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/database/databaseGameCards.json";
 //
 //        int initialSize = cardsCollection.size();
 //
@@ -44,7 +44,7 @@
     @Test
     public void testPopulateDeckObjectiveCard() {
         // Assume that `cards.json` is a valid JSON file in the `src/test/resources` directory
-        String jsonFilePath = "/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/database/databaseObjectiveCards.json";
+        String jsonFilePath = "/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/database/databaseObjectiveCards.json";
 
         int initialSize = cardsCollection.size();
 
@@ -58,7 +58,7 @@
     @Test
     public void testPopulateDeckStarterFrontAndBack() {
         // Assume that `starterCards.json` is a valid JSON file in the `src/test/resources` directory
-        String jsonFilePath = "/Users/lollo/IdeaProjects/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/database/databaseStarterCards.json";
+        String jsonFilePath = "/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/database/databaseStarterCards.json";
 
         int initialSize = cardsCollection.size();
 
@@ -68,7 +68,4 @@
         // Check that cards have been added to the collection
         assertTrue(cardsCollection.size() > 0);
     }
-
-
-
 }
\ No newline at end of file
Index: target/classes/target/classes/pom 2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/target/classes/pom 2.xml b/target/classes/target/classes/pom 2.xml
new file mode 100644
--- /dev/null	(date 1711823696541)
+++ b/target/classes/target/classes/pom 2.xml	(date 1711823696541)
@@ -0,0 +1,63 @@
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>it.polimi.ingsw</groupId>
+    <artifactId>ing-sw-2024-pucci-santarossa-ruggieri-sciarretta</artifactId>
+    <version>1.0-SNAPSHOT</version>
+
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <version>3.8.1</version>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-resources-plugin</artifactId>
+                <version>3.2.0</version>
+                <configuration>
+                    <encoding>UTF-8</encoding>
+                </configuration>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-surefire-plugin</artifactId>
+                <version>2.22.2</version>
+                <dependencies>
+                    <dependency>
+                        <groupId>org.junit.jupiter</groupId>
+                        <artifactId>junit-jupiter-engine</artifactId>
+                        <version>5.8.2</version>
+                    </dependency>
+                </dependencies>
+            </plugin>
+        </plugins>
+    </build>
+
+    <properties>
+        <maven.compiler.source>1.8</maven.compiler.source>
+        <maven.compiler.target>1.8</maven.compiler.target>
+    </properties>
+
+    <dependencies>
+        <!-- Jackson's dependency for JSON processing -->
+        <dependency>
+            <groupId>com.fasterxml.jackson.core</groupId>
+            <artifactId>jackson-databind</artifactId>
+            <version>2.13.0</version>
+        </dependency>
+
+        <!-- JUnit dependency for testing -->
+        <dependency>
+            <groupId>org.junit.jupiter</groupId>
+            <artifactId>junit-jupiter</artifactId>
+            <version>5.8.2</version>
+            <scope>test</scope>
+        </dependency>
+    </dependencies>
+</project>
+
Index: src/test/java/it/polimi/ingsw/model/CommonBoardTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/it/polimi/ingsw/model/CommonBoardTest.java b/src/test/java/it/polimi/ingsw/model/CommonBoardTest.java
new file mode 100644
--- /dev/null	(date 1711877128178)
+++ b/src/test/java/it/polimi/ingsw/model/CommonBoardTest.java	(date 1711877128178)
@@ -0,0 +1,105 @@
+package it.polimi.ingsw.model;
+
+import org.junit.jupiter.api.BeforeEach;
+import org.junit.jupiter.api.Test;
+import static org.junit.jupiter.api.Assertions.*;
+
+public class CommonBoardTest {
+    private CommonBoard commonBoard;
+
+    @BeforeEach
+    public void setUp() {
+        CardsCollection resource_cards_collection = new CardsCollection();
+        CardsCollection gold_cards_collection = new CardsCollection();
+        CardsCollection starter_cards_collection = new CardsCollection();
+        CardsCollection objective_cards_collection = new CardsCollection();
+        String resource_type = "Resource";
+        String gold_type = "Gold";
+        String starter_type = "Starter";
+        String objective_type = "Objective";
+
+        // Initialize a CommonBoard object for testing
+        commonBoard = new CommonBoard(resource_cards_collection, gold_cards_collection, starter_cards_collection, objective_cards_collection, resource_type, gold_type, starter_type, objective_type);
+    }
+    
+        @Test
+        public void testInitializeBoard() {
+            commonBoard.initializeBoard();
+
+            // Test if board nodes are initialized --> TEST OK
+            for (int i = 0; i < 29; i++) {
+                assertNotNull(commonBoard.getBoardNodes()[i]);
+            }
+        }
+  /*
+            // Test if table cards are populated with cards from the decks --> TEST OK
+            for (int i = 0; i < 2; i++) {
+                for (int j = 0; j < 2; j++) {
+                    assertNotNull(commonBoard.getTableCards()[i][j]);
+                }
+            }
+
+
+
+        @Test
+        public void testDrawFromConcreteDeck() {
+            // Test drawing a card from a concrete deck
+            Card drawnCard = commonBoard.drawFromConcreteDeck(2); // Assuming resource_concrete_deck is at index 0
+            assertNotNull(drawnCard);
+            assertNotNull(commonBoard.drawFromConcreteDeck(0));
+            assertNotNull(commonBoard.drawFromConcreteDeck(1));
+            assertNull(commonBoard.drawFromConcreteDeck(-1));
+        }
+
+    @Test
+    public void testDrawFromTable() {
+        // Test drawing a card from the table and replacing it
+        Card drawnCard = commonBoard.drawFromTable(0, 0, 0); // Assuming drawing from the first row and first column
+        assertNotNull(drawnCard);
+        assertNotNull(commonBoard.drawFromTable(0, 0, 0));
+        assertNotNull(commonBoard.drawFromTable(1, 1, 1));
+        assertNull(commonBoard.drawFromTable(-1, 0, 0));
+        assertNull(commonBoard.drawFromTable(0, 2, 0));
+        assertNull(commonBoard.drawFromTable(0, 0, -1));
+        assertNull(commonBoard.drawFromTable(0, 0, 2));
+    }
+ */
+    /*
+    @Test
+    public void testMovePlayer() {
+        // Test moving a player
+        commonBoard.movePlayer(0, 5); // Assuming moving player 0 by 5 positions
+        assertEquals( 5, commonBoard.getPlayerPosition(0));
+
+        commonBoard.movePlayer(0, 5);
+        assertEquals(5, commonBoard.getPlayerPosition(0));
+        commonBoard.movePlayer(0, -2);
+        assertEquals(3, commonBoard.getPlayerPosition(0));
+        // Test moving beyond the board bounds
+        commonBoard.movePlayer(0, 30);
+        assertEquals(-1, commonBoard.getPlayerPosition(0));
+    }
+
+    @Test
+    public void testGetPartialWinner() {
+        // Test getting partial winner
+        assertEquals(-1, commonBoard.getPartialWinner());
+
+        // Testing partial winner
+        commonBoard.movePlayer(0, 20);
+        assertEquals(0, commonBoard.getPartialWinner());
+        // Testing partial winner cannot be overwritten
+        commonBoard.movePlayer(1, 20);
+        assertEquals(0, commonBoard.getPartialWinner());
+    }
+
+    @Test
+    public void testSetPartialWinner() {
+        // Test setting partial winner
+        commonBoard.setPartialWinner(0); // Assuming setting player 0 as partial winner
+        assertEquals( 0, commonBoard.getPartialWinner());
+    }
+
+
+     */
+}
Index: target/classes/.idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/.idea/jarRepositories.xml b/target/classes/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	(date 1711823696557)
+++ b/target/classes/.idea/jarRepositories.xml	(date 1711823696557)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: target/classes/.idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/.idea/compiler.xml b/target/classes/.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1711823696594)
+++ b/target/classes/.idea/compiler.xml	(date 1711823696594)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="demo" />
+        <module name="ing-sw-2024-pucci-santarossa-ruggieri-sciarretta" />
+      </profile>
+    </annotationProcessing>
+  </component>
+</project>
\ No newline at end of file
Index: target/classes/.idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/.idea/encodings.xml b/target/classes/.idea/encodings.xml
new file mode 100644
--- /dev/null	(date 1711823696556)
+++ b/target/classes/.idea/encodings.xml	(date 1711823696556)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/src/main/resources" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: target/classes/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/pom.xml b/target/classes/pom.xml
new file mode 100644
--- /dev/null	(date 1711823696547)
+++ b/target/classes/pom.xml	(date 1711823696547)
@@ -0,0 +1,63 @@
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>it.polimi.ingsw</groupId>
+    <artifactId>ing-sw-2024-pucci-santarossa-ruggieri-sciarretta</artifactId>
+    <version>1.0-SNAPSHOT</version>
+
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <version>3.8.1</version>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-resources-plugin</artifactId>
+                <version>3.2.0</version>
+                <configuration>
+                    <encoding>UTF-8</encoding>
+                </configuration>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-surefire-plugin</artifactId>
+                <version>2.22.2</version>
+                <dependencies>
+                    <dependency>
+                        <groupId>org.junit.jupiter</groupId>
+                        <artifactId>junit-jupiter-engine</artifactId>
+                        <version>5.8.2</version>
+                    </dependency>
+                </dependencies>
+            </plugin>
+        </plugins>
+    </build>
+
+    <properties>
+        <maven.compiler.source>1.8</maven.compiler.source>
+        <maven.compiler.target>1.8</maven.compiler.target>
+    </properties>
+
+    <dependencies>
+        <!-- Jackson's dependency for JSON processing -->
+        <dependency>
+            <groupId>com.fasterxml.jackson.core</groupId>
+            <artifactId>jackson-databind</artifactId>
+            <version>2.13.0</version>
+        </dependency>
+
+        <!-- JUnit dependency for testing -->
+        <dependency>
+            <groupId>org.junit.jupiter</groupId>
+            <artifactId>junit-jupiter</artifactId>
+            <version>5.8.2</version>
+            <scope>test</scope>
+        </dependency>
+    </dependencies>
+
+</project>
Index: target/classes/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta.iml b/target/classes/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta.iml
new file mode 100644
--- /dev/null	(date 1711823696546)
+++ b/target/classes/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta.iml	(date 1711823696546)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: target/surefire-reports/it.polimi.ingsw.model.CardsCollectionTest.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>-------------------------------------------------------------------------------\nTest set: it.polimi.ingsw.model.CardsCollectionTest\n-------------------------------------------------------------------------------\nTests run: 4, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.208 s <<< FAILURE! - in it.polimi.ingsw.model.CardsCollectionTest\ntestPopulateDeckStarterFrontAndBack  Time elapsed: 0.168 s  <<< FAILURE!\norg.opentest4j.AssertionFailedError: expected: <true> but was: <false>\n\tat it.polimi.ingsw.model.CardsCollectionTest.testPopulateDeckStarterFrontAndBack(CardsCollectionTest.java:69)\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/surefire-reports/it.polimi.ingsw.model.CardsCollectionTest.txt b/target/surefire-reports/it.polimi.ingsw.model.CardsCollectionTest.txt
--- a/target/surefire-reports/it.polimi.ingsw.model.CardsCollectionTest.txt	(revision d3b0d61aaabe5b7ebe1fee86a7352f6cda21bd39)
+++ b/target/surefire-reports/it.polimi.ingsw.model.CardsCollectionTest.txt	(date 1711877103729)
@@ -1,8 +1,4 @@
 -------------------------------------------------------------------------------
 Test set: it.polimi.ingsw.model.CardsCollectionTest
 -------------------------------------------------------------------------------
-Tests run: 4, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.208 s <<< FAILURE! - in it.polimi.ingsw.model.CardsCollectionTest
-testPopulateDeckStarterFrontAndBack  Time elapsed: 0.168 s  <<< FAILURE!
-org.opentest4j.AssertionFailedError: expected: <true> but was: <false>
-	at it.polimi.ingsw.model.CardsCollectionTest.testPopulateDeckStarterFrontAndBack(CardsCollectionTest.java:69)
-
+Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.107 s - in it.polimi.ingsw.model.CardsCollectionTest
Index: src/main/java/it/polimi/ingsw/model/CommonBoard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.polimi.ingsw.model;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Stack;\n\n//NB il giocatore iniziale (pedina nera) è il giocatore 0\n\npublic class CommonBoard {\n    private ConcreteDeck resource_concrete_deck; // resource_concrete_deck\n    private ConcreteDeck gold_concrete_deck; // gold_concrete_deck\n    private ConcreteDeck starter_concrete_deck;\n    private ConcreteDeck objective_concrete_deck; // objective_concrete_deck\n    private ConcreteDeck[] decks;\n    private CommonBoardNode[] board_nodes; // Array of nodes representing the board\n    private Card[][] table_cards; // Cards on the table\n    private int partial_winner = -1;;\n\n\n    public CommonBoard(CardsCollection resource_cards_collection,\n                       CardsCollection gold_cards_collection,\n                       CardsCollection starter_cards_collection,\n                       CardsCollection objective_cards_collection,\n                       String resource_type, String gold_type, String  starter_type, String objective_type) {\n        resource_concrete_deck = new ConcreteDeck(resource_cards_collection, resource_type); //resource_concrete_deck\n        gold_concrete_deck = new ConcreteDeck(gold_cards_collection, gold_type); //gold_concrete_deck\n        starter_concrete_deck = new ConcreteDeck(starter_cards_collection, starter_type);\n        objective_concrete_deck = new ConcreteDeck(objective_cards_collection, objective_type); //objective_concrete_deck\n        board_nodes = new CommonBoardNode[29];\n        decks = new ConcreteDeck[3]; // Create an array to hold the two decks\n        table_cards = new Card[3][2];\n\n    }\n     public ConcreteDeck getResourceConcreteDeck(){return resource_concrete_deck;}\n     public ConcreteDeck getGoldConcreteDeck(){return gold_concrete_deck;}\n    public ConcreteDeck getStarterConcreteDeck(){return starter_concrete_deck;}\n     public ConcreteDeck getObjectiveConcreteDeck(){return objective_concrete_deck;}\n\n    // Method to initialize the board\n    public void initializeBoard() {\n        for (int i = 0; i < 29; i++) {\n            board_nodes[i] = new CommonBoardNode(i);\n        }\n        // Populate the table with cards from the decks\n        for (int i = 0; i < 2; i++) {\n            // Populate the first array with two cards from the Resource ConcreteDeck\n            Card cardFromConcreteDeck1 = resource_concrete_deck.pop();\n            table_cards[0][i] = cardFromConcreteDeck1;\n\n            // Populate the second array with two cards from the Gold ConcreteDeck\n            Card cardFromConcreteDeck2 = gold_concrete_deck.pop();\n            table_cards[1][i] = cardFromConcreteDeck2;\n\n            // Populate the second array with two cards from the Objective ConcreteDeck\n            Card cardFromConcreteDeck3 = objective_concrete_deck.pop();\n            table_cards[2][i] = cardFromConcreteDeck3;\n        }\n        decks[0] = resource_concrete_deck;\n        decks[1] = gold_concrete_deck;\n        decks[2] = objective_concrete_deck;\n    }\n\n\n    // Method to draw a card directly from a ConcreteDeck\n    public Card drawFromConcreteDeck(int ConcreteDeckIndex) {\n        if (ConcreteDeckIndex >= 0 && ConcreteDeckIndex < 2) {\n            return decks[ConcreteDeckIndex].pop(); //the return of this function is the card that will be taken by the player\n        }\n        return null;\n    }\n\n\n    // Method to draw a card from the table and replace it with a card from the corresponding ConcreteDeck\n    public Card drawFromTable(int row, int col, int ConcreteDeckIndex) {\n        if (row >= 0 && row < 2 && col >= 0 && col < 2 && ConcreteDeckIndex >= 0 && ConcreteDeckIndex < 2) {\n            // Remove the card from the table and store it\n            Card drawnCard = table_cards[row][col];\n            // Draw a card from the corresponding ConcreteDeck and replace it on the table\n            table_cards[row][col] = decks[ConcreteDeckIndex].pop();\n            // Return the drawn card\n            return drawnCard;\n        }\n        return null;\n    }\n\n    // Method to get the position of a player\n    public int getPlayerPosition(int player_index) {\n        for (CommonBoardNode node : board_nodes) {\n            if (node.isPlayerPresent(player_index)) {\n                return node.getNodeNumber();\n            }\n        }\n        return -1; // Player not found\n    }\n\n\n\n    // Method to move a player by a specified delta\n    public void movePlayer(int playerIndex, int delta) {\n        // Get the current position of the player\n        int current_position = getPlayerPosition(playerIndex);\n\n        // Calculate the new position by adding delta\n        int new_position = current_position + delta;\n\n        // Check if the new position is within the board bounds\n        if (new_position >= 0 && new_position < 29) {\n            // Remove the player from the current position\n            board_nodes[current_position].setPlayer(playerIndex, false);\n            // Set the player to the new position\n            board_nodes[new_position].setPlayer(playerIndex, true);\n        }\n\n        // Check if a player reaches 20 points for the first time\n        if (getPlayerPosition(playerIndex) >= 20 && partial_winner == -1) {\n            setPartialWinner(playerIndex);\n        }\n\n    }\n\n\n\n    public int getPartialWinner(){\n        return partial_winner;\n    }\n\n    // Method to set a player as partial winner\n    public void setPartialWinner(int playerIndex) {\n        this.partial_winner = playerIndex;\n    }\n\n}\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/polimi/ingsw/model/CommonBoard.java b/src/main/java/it/polimi/ingsw/model/CommonBoard.java
--- a/src/main/java/it/polimi/ingsw/model/CommonBoard.java	(revision d3b0d61aaabe5b7ebe1fee86a7352f6cda21bd39)
+++ b/src/main/java/it/polimi/ingsw/model/CommonBoard.java	(date 1711876597017)
@@ -11,6 +11,7 @@
     private ConcreteDeck starter_concrete_deck;
     private ConcreteDeck objective_concrete_deck; // objective_concrete_deck
     private ConcreteDeck[] decks;
+    private int num_players;
     private CommonBoardNode[] board_nodes; // Array of nodes representing the board
     private Card[][] table_cards; // Cards on the table
     private int partial_winner = -1;;
@@ -21,15 +22,16 @@
                        CardsCollection starter_cards_collection,
                        CardsCollection objective_cards_collection,
                        String resource_type, String gold_type, String  starter_type, String objective_type) {
-        resource_concrete_deck = new ConcreteDeck(resource_cards_collection, resource_type); //resource_concrete_deck
-        gold_concrete_deck = new ConcreteDeck(gold_cards_collection, gold_type); //gold_concrete_deck
+        //resource_concrete_deck = new ConcreteDeck(resource_cards_collection, resource_type); //resource_concrete_deck
+        //gold_concrete_deck = new ConcreteDeck(gold_cards_collection, gold_type); //gold_concrete_deck
         starter_concrete_deck = new ConcreteDeck(starter_cards_collection, starter_type);
         objective_concrete_deck = new ConcreteDeck(objective_cards_collection, objective_type); //objective_concrete_deck
         board_nodes = new CommonBoardNode[29];
         decks = new ConcreteDeck[3]; // Create an array to hold the two decks
         table_cards = new Card[3][2];
-
+        num_players = 0;
     }
+
      public ConcreteDeck getResourceConcreteDeck(){return resource_concrete_deck;}
      public ConcreteDeck getGoldConcreteDeck(){return gold_concrete_deck;}
     public ConcreteDeck getStarterConcreteDeck(){return starter_concrete_deck;}
@@ -40,42 +42,70 @@
         for (int i = 0; i < 29; i++) {
             board_nodes[i] = new CommonBoardNode(i);
         }
+
         // Populate the table with cards from the decks
         for (int i = 0; i < 2; i++) {
+             /*
             // Populate the first array with two cards from the Resource ConcreteDeck
-            Card cardFromConcreteDeck1 = resource_concrete_deck.pop();
-            table_cards[0][i] = cardFromConcreteDeck1;
+            try {
+                Card cardFromConcreteDeck1 = resource_concrete_deck.pop();
+                table_cards[0][i] = cardFromConcreteDeck1;
+            } catch (EmptyStackException e) {
+                // Gestione dell'eccezione
+                System.err.println("Il mazzo di carte risorsa è vuoto: " + e.getMessage());
+            }
 
             // Populate the second array with two cards from the Gold ConcreteDeck
-            Card cardFromConcreteDeck2 = gold_concrete_deck.pop();
-            table_cards[1][i] = cardFromConcreteDeck2;
-
+            try {
+                Card cardFromConcreteDeck2 = gold_concrete_deck.pop();
+                table_cards[1][i] = cardFromConcreteDeck2;
+            } catch (EmptyStackException e) {
+                // Gestione dell'eccezione
+                System.err.println("Il mazzo di carte oro è vuoto: " + e.getMessage());
+            }
+*/
             // Populate the second array with two cards from the Objective ConcreteDeck
-            Card cardFromConcreteDeck3 = objective_concrete_deck.pop();
-            table_cards[2][i] = cardFromConcreteDeck3;
-        }
-        decks[0] = resource_concrete_deck;
-        decks[1] = gold_concrete_deck;
+            try {
+                Card cardFromConcreteDeck3 = objective_concrete_deck.pop();
+                table_cards[2][i] = cardFromConcreteDeck3;
+            } catch (EmptyStackException e) {
+                // Gestione dell'eccezione
+                System.err.println("Il mazzo di carte obiettivo è vuoto: " + e.getMessage());
+
+            }
+        //decks[0] = resource_concrete_deck;
+        //decks[1] = gold_concrete_deck;
         decks[2] = objective_concrete_deck;
+
+        }
+        setInitialPosition();
     }
-
 
     // Method to draw a card directly from a ConcreteDeck
     public Card drawFromConcreteDeck(int ConcreteDeckIndex) {
         if (ConcreteDeckIndex >= 0 && ConcreteDeckIndex < 2) {
-            return decks[ConcreteDeckIndex].pop(); //the return of this function is the card that will be taken by the player
+            try {
+                return decks[ConcreteDeckIndex].pop(); //the return of this function is the card that will be taken by the player
+            } catch (EmptyStackException e) {
+                // Gestione dell'eccezione
+                System.err.println("Il mazzo di carte scelto è vuoto: " + e.getMessage());
+            }
         }
         return null;
     }
 
-
     // Method to draw a card from the table and replace it with a card from the corresponding ConcreteDeck
     public Card drawFromTable(int row, int col, int ConcreteDeckIndex) {
         if (row >= 0 && row < 2 && col >= 0 && col < 2 && ConcreteDeckIndex >= 0 && ConcreteDeckIndex < 2) {
             // Remove the card from the table and store it
             Card drawnCard = table_cards[row][col];
             // Draw a card from the corresponding ConcreteDeck and replace it on the table
-            table_cards[row][col] = decks[ConcreteDeckIndex].pop();
+            try {
+                table_cards[row][col] = decks[ConcreteDeckIndex].pop();
+            } catch (EmptyStackException e) {
+                // Gestione dell'eccezione
+                System.err.println("Il mazzo di carte scelto è vuoto: " + e.getMessage());
+            }
             // Return the drawn card
             return drawnCard;
         }
@@ -92,6 +122,21 @@
         return -1; // Player not found
     }
 
+    public void setInitialPosition() {
+        int numPlayers = getPlayersCount(); // Implementa getPlayerCount per ottenere il numero totale di giocatori
+
+        for (int i = 0; i < numPlayers; i++) {
+            int currentPosition = getPlayerPosition(i);
+            if (currentPosition != 0) {
+                // Se il giocatore non è già nella posizione 0, lo sposta
+                board_nodes[0].setPlayer(i, true);
+            }
+        }
+    }
+
+    public int getPlayersCount(){
+        return this.num_players;
+    }
 
 
     // Method to move a player by a specified delta
@@ -117,10 +162,26 @@
 
     }
 
+    // Method to get the board nodes array
+    public CommonBoardNode[] getBoardNodes() {
+        return board_nodes;
+    }
 
+    // Method to get a specific board node by index
+    public CommonBoardNode getBoardNode(int index) {
+        if (index >= 0 && index < board_nodes.length) {
+            return board_nodes[index];
+        }
+        return null;
+    }
+
+    // Method to get the table cards array
+    public Card[][] getTableCards() {
+        return this.table_cards;
+    }
 
     public int getPartialWinner(){
-        return partial_winner;
+        return this.partial_winner;
     }
 
     // Method to set a player as partial winner
Index: target/classes/.idea/libraries/fasterxml_jackson_core_annotations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/.idea/libraries/fasterxml_jackson_core_annotations.xml b/target/classes/.idea/libraries/fasterxml_jackson_core_annotations.xml
new file mode 100644
--- /dev/null	(date 1711823696558)
+++ b/target/classes/.idea/libraries/fasterxml_jackson_core_annotations.xml	(date 1711823696558)
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="fasterxml.jackson.core.annotations" type="repository">
+    <properties maven-id="com.fasterxml.jackson.core:jackson-annotations:2.13.3" />
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-annotations/2.13.3/jackson-annotations-2.13.3.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: target/classes/pom 2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/pom 2.xml b/target/classes/pom 2.xml
new file mode 100644
--- /dev/null	(date 1711822892367)
+++ b/target/classes/pom 2.xml	(date 1711822892367)
@@ -0,0 +1,63 @@
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>it.polimi.ingsw</groupId>
+    <artifactId>ing-sw-2024-pucci-santarossa-ruggieri-sciarretta</artifactId>
+    <version>1.0-SNAPSHOT</version>
+
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <version>3.8.1</version>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-resources-plugin</artifactId>
+                <version>3.2.0</version>
+                <configuration>
+                    <encoding>UTF-8</encoding>
+                </configuration>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-surefire-plugin</artifactId>
+                <version>2.22.2</version>
+                <dependencies>
+                    <dependency>
+                        <groupId>org.junit.jupiter</groupId>
+                        <artifactId>junit-jupiter-engine</artifactId>
+                        <version>5.8.2</version>
+                    </dependency>
+                </dependencies>
+            </plugin>
+        </plugins>
+    </build>
+
+    <properties>
+        <maven.compiler.source>1.8</maven.compiler.source>
+        <maven.compiler.target>1.8</maven.compiler.target>
+    </properties>
+
+    <dependencies>
+        <!-- Jackson's dependency for JSON processing -->
+        <dependency>
+            <groupId>com.fasterxml.jackson.core</groupId>
+            <artifactId>jackson-databind</artifactId>
+            <version>2.13.0</version>
+        </dependency>
+
+        <!-- JUnit dependency for testing -->
+        <dependency>
+            <groupId>org.junit.jupiter</groupId>
+            <artifactId>junit-jupiter</artifactId>
+            <version>5.8.2</version>
+            <scope>test</scope>
+        </dependency>
+    </dependencies>
+</project>
+
Index: target/surefire-reports/it.polimi.ingsw.model.PersonalBoardTest.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>-------------------------------------------------------------------------------\nTest set: it.polimi.ingsw.model.PersonalBoardTest\n-------------------------------------------------------------------------------\nTests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.168 s - in it.polimi.ingsw.model.PersonalBoardTest\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/surefire-reports/it.polimi.ingsw.model.PersonalBoardTest.txt b/target/surefire-reports/it.polimi.ingsw.model.PersonalBoardTest.txt
--- a/target/surefire-reports/it.polimi.ingsw.model.PersonalBoardTest.txt	(revision d3b0d61aaabe5b7ebe1fee86a7352f6cda21bd39)
+++ b/target/surefire-reports/it.polimi.ingsw.model.PersonalBoardTest.txt	(date 1711877103837)
@@ -1,4 +1,4 @@
 -------------------------------------------------------------------------------
 Test set: it.polimi.ingsw.model.PersonalBoardTest
 -------------------------------------------------------------------------------
-Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.168 s - in it.polimi.ingsw.model.PersonalBoardTest
+Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.101 s - in it.polimi.ingsw.model.PersonalBoardTest
Index: target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/Users/riccardo__ruggieri/polimi/code/Proj_sw/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/test/java/it/polimi/ingsw/model/PersonalBoardTest.java\n/Users/riccardo__ruggieri/polimi/code/Proj_sw/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/test/java/it/polimi/ingsw/model/CardsCollectionTest.java\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst b/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst
--- a/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst	(revision d3b0d61aaabe5b7ebe1fee86a7352f6cda21bd39)
+++ b/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst	(date 1711825266994)
@@ -1,2 +1,3 @@
-/Users/riccardo__ruggieri/polimi/code/Proj_sw/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/test/java/it/polimi/ingsw/model/PersonalBoardTest.java
-/Users/riccardo__ruggieri/polimi/code/Proj_sw/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/test/java/it/polimi/ingsw/model/CardsCollectionTest.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/test/java/it/polimi/ingsw/model/CommonBoardTest.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/test/java/it/polimi/ingsw/model/CardsCollectionTest.java
+/Users/valentinapucci/Desktop/java/ing-sw-2024-pucci-santarossa-ruggieri-sciarretta/src/test/java/it/polimi/ingsw/model/PersonalBoardTest.java
Index: target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst b/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst
--- a/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst	(revision d3b0d61aaabe5b7ebe1fee86a7352f6cda21bd39)
+++ b/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst	(date 1711877103179)
@@ -1,0 +1,3 @@
+it/polimi/ingsw/model/CommonBoardNodeTest.class
+it/polimi/ingsw/model/PersonalBoardTest.class
+it/polimi/ingsw/model/CommonBoardTest.class
Index: target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>it/polimi/ingsw/model/DeckFactory.class\nit/polimi/ingsw/model/PersonalBoard$1.class\nit/polimi/ingsw/model/Game.class\nit/polimi/ingsw/model/ConcreteDeck.class\nit/polimi/ingsw/model/Orientation.class\nit/polimi/ingsw/model/Card.class\nit/polimi/ingsw/model/GoldCard.class\nit/polimi/ingsw/model/ResourceObjectiveCard.class\nit/polimi/ingsw/model/StarterCard.class\nit/polimi/ingsw/model/ResourceCard.class\nit/polimi/ingsw/model/BoardCellCoordinate.class\nit/polimi/ingsw/model/Resource.class\nit/polimi/ingsw/model/CommonBoardNode.class\nit/polimi/ingsw/model/Item.class\nit/polimi/ingsw/model/Game$1.class\nit/polimi/ingsw/model/Cell.class\nit/polimi/ingsw/model/Coordinate.class\nit/polimi/ingsw/model/Color.class\nit/polimi/ingsw/model/LetterPatternObjectiveCard.class\nit/polimi/ingsw/model/ItemObjectiveCard.class\nit/polimi/ingsw/model/ObjectiveCard.class\nit/polimi/ingsw/model/PersonalBoard.class\nit/polimi/ingsw/model/CardsCollection.class\nit/polimi/ingsw/model/Player.class\nit/polimi/ingsw/model/IllegalMoveException.class\nit/polimi/ingsw/model/DiagonalPatternObjectiveCard.class\nit/polimi/ingsw/model/Corner.class\nit/polimi/ingsw/model/CommonBoard.class\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst b/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
--- a/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst	(revision d3b0d61aaabe5b7ebe1fee86a7352f6cda21bd39)
+++ b/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst	(date 1711876598972)
@@ -1,28 +1,32 @@
-it/polimi/ingsw/model/DeckFactory.class
 it/polimi/ingsw/model/PersonalBoard$1.class
 it/polimi/ingsw/model/Game.class
 it/polimi/ingsw/model/ConcreteDeck.class
-it/polimi/ingsw/model/Orientation.class
-it/polimi/ingsw/model/Card.class
-it/polimi/ingsw/model/GoldCard.class
-it/polimi/ingsw/model/ResourceObjectiveCard.class
-it/polimi/ingsw/model/StarterCard.class
-it/polimi/ingsw/model/ResourceCard.class
 it/polimi/ingsw/model/BoardCellCoordinate.class
+it/polimi/ingsw/model/Color.class
+it/polimi/ingsw/model/CardsCollection.class
+it/polimi/ingsw/model/DiagonalPatternObjectiveCard.class
+it/polimi/ingsw/model/CommonBoard.class
 it/polimi/ingsw/model/Resource.class
 it/polimi/ingsw/model/CommonBoardNode.class
+it/polimi/ingsw/model/ScoreStrategy.class
+it/polimi/ingsw/model/ObjectiveCard.class
+it/polimi/ingsw/model/PersonalBoard.class
+it/polimi/ingsw/model/ResourceObjectiveCard$1.class
+it/polimi/ingsw/model/GoldCard.class
+it/polimi/ingsw/model/StarterCard.class
+it/polimi/ingsw/model/ResourceCard.class
 it/polimi/ingsw/model/Item.class
-it/polimi/ingsw/model/Game$1.class
-it/polimi/ingsw/model/Cell.class
+it/polimi/ingsw/model/ItemObjectiveCard$1.class
 it/polimi/ingsw/model/Coordinate.class
-it/polimi/ingsw/model/Color.class
 it/polimi/ingsw/model/LetterPatternObjectiveCard.class
 it/polimi/ingsw/model/ItemObjectiveCard.class
-it/polimi/ingsw/model/ObjectiveCard.class
-it/polimi/ingsw/model/PersonalBoard.class
-it/polimi/ingsw/model/CardsCollection.class
 it/polimi/ingsw/model/Player.class
-it/polimi/ingsw/model/IllegalMoveException.class
-it/polimi/ingsw/model/DiagonalPatternObjectiveCard.class
 it/polimi/ingsw/model/Corner.class
-it/polimi/ingsw/model/CommonBoard.class
+it/polimi/ingsw/model/DiagonalPatternScoreStrategy.class
+it/polimi/ingsw/model/Orientation.class
+it/polimi/ingsw/model/Card.class
+it/polimi/ingsw/model/ResourceObjectiveCard.class
+it/polimi/ingsw/model/LetterPatternScoreStrategy.class
+it/polimi/ingsw/model/Cell.class
+it/polimi/ingsw/model/IllegalMoveException.class
+it/polimi/ingsw/model/EmptyStackException.class
Index: target/classes/database/databaseObjectiveCards.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/database/databaseObjectiveCards.json b/target/classes/database/databaseObjectiveCards.json
new file mode 100644
--- /dev/null	(date 1711823696540)
+++ b/target/classes/database/databaseObjectiveCards.json	(date 1711823696540)
@@ -0,0 +1,284 @@
+
+{
+  "cards": [
+    {
+      "id": 87,
+      "type": "Objective",
+      "points": 2,
+      "numFeathers": 0,
+      "numParchments": 0,
+      "numPotions": 0,
+      "numMushroom": 0,
+      "numLeaves": 0,
+      "numButterflies": 0,
+      "pattern": "increasing_diagonal",
+      "color1": "red",
+      "color2": "Red",
+      "color3": "Red"
+    },
+
+    {
+      "id": 88,
+      "type": "Objective",
+      "points": 2,
+      "numFeathers": 0,
+      "numParchments": 0,
+      "numPotions": 0,
+      "numMushroom": 0,
+      "numLeaves": 0,
+      "numButterflies": 0,
+      "numWolves": 0,
+      "pattern": "decreasing_diagonal",
+      "color1": "Green",
+      "color2": "Green",
+      "color3": "Green"
+    },
+
+    {
+      "id": 89,
+      "type": "Objective",
+      "points": 2,
+      "numFeathers": 0,
+      "numParchments": 0,
+      "numPotions": 0,
+      "numMushroom": 0,
+      "numLeaves": 0,
+      "numButterflies": 0,
+      "pattern": "increasing_diagonal",
+      "color1": "Blue",
+      "color2": "Blue",
+      "color3": "Blue"
+    },
+
+
+
+    {
+      "id": 90,
+      "type": "Objective",
+      "points": 2,
+      "numFeathers": 0,
+      "numParchments": 0,
+      "numPotions": 0,
+      "numMushroom": 0,
+      "numLeaves": 0,
+      "numButterflies": 0,
+      "pattern": "decreasing_diagonal",
+      "color1": "Purple",
+      "color2": "Purple",
+      "color3": "Purple"
+    },
+
+
+    {
+      "id": 91,
+      "type": "Objective",
+      "points": 3,
+      "numFeathers": 0,
+      "numParchments": 0,
+      "numPotions": 0,
+      "numMushroom": 0,
+      "numLeaves": 0,
+      "numButterflies": 0,
+      "numWolves": 0,
+      "pattern": "L",
+      "color1": "Red",
+      "color2": "Red",
+      "color3": "Green"
+    },
+
+    {
+      "id": 92,
+      "type": "Objective",
+      "points": 3,
+      "numFeathers": 0,
+      "numParchments": 0,
+      "numPotions": 0,
+      "numMushroom": 0,
+      "numLeaves": 0,
+      "numButterflies": 0,
+      "numWolves": 0,
+      "pattern": "J",
+      "color1": "Green",
+      "color2": "Green",
+      "color3": "Purple"
+    },
+
+
+    {
+      "id": 93,
+      "type": "Objective",
+      "points": 3,
+      "numFeathers": 0,
+      "numParchments": 0,
+      "numPotions": 0,
+      "numMushroom": 0,
+      "numLeaves": 0,
+      "numButterflies": 0,
+      "numWolves": 0,
+      "pattern": "P",
+      "color1": "Red",
+      "color2": "Blue",
+      "color3": "Blue"
+    },
+
+
+    {
+      "id": 94,
+      "type": "Objective",
+      "points": 3,
+      "numFeathers": 0,
+      "numParchments": 0,
+      "numPotions": 0,
+      "numMushroom": 0,
+      "numLeaves": 0,
+      "numButterflies": 0,
+      "numWolves": 0,
+      "pattern": "Q",
+      "color1": "Blue",
+      "color2": "Purple",
+      "color3": "Purple"
+    },
+
+
+    {
+      "id": 95,
+      "type": "Objective",
+      "points": 2,
+      "numFeathers": 0,
+      "numParchments": 0,
+      "numPotions": 0,
+      "numMushroom": 3,
+      "numLeaves": 0,
+      "numButterflies": 0,
+      "numWolves": 0,
+      "pattern": "None",
+      "color1": null,
+      "color2": null,
+      "color3": null
+    },
+
+
+    {
+      "id": 96,
+      "type": "Objective",
+      "points": 2,
+      "numFeathers": 0,
+      "numParchments": 0,
+      "numPotions": 0,
+      "numMushroom": 0,
+      "numLeaves": 3,
+      "numButterflies": 0,
+      "numWolves": 0,
+      "pattern": "None",
+      "color1": null,
+      "color2": null,
+      "color3": null
+    },
+
+    {
+      "id": 97,
+      "type": "Objective",
+      "points": 2,
+      "numFeathers": 0,
+      "numParchments": 0,
+      "numPotions": 0,
+      "numMushroom": 0,
+      "numLeaves": 0,
+      "numButterflies": 0,
+      "numWolves": 3,
+      "pattern": "None",
+      "color1": null,
+      "color2": null,
+      "color3": null
+    },
+
+
+    {
+      "id": 98,
+      "type": "Objective",
+      "points": 2,
+      "numFeathers": 0,
+      "numParchments": 0,
+      "numPotions": 0,
+      "numMushroom": 0,
+      "numLeaves": 0,
+      "numButterflies": 3,
+      "numWolves": 0,
+      "pattern": "None",
+      "color1": null,
+      "color2": null,
+      "color3": null
+    },
+
+    {
+      "id": 99,
+      "type": "Objective",
+      "points": 3,
+      "numFeathers": 1,
+      "numParchments": 1,
+      "numPotions": 1,
+      "numMushroom": 0,
+      "numLeaves": 0,
+      "numButterflies": 0,
+      "numWolves": 0,
+      "pattern": "None",
+      "color1": null,
+      "color2": null,
+      "color3": null
+    },
+
+
+    {
+      "id": 100,
+      "type": "Objective",
+      "points": 2,
+      "numFeathers": 0,
+      "numParchments": 2,
+      "numPotions": 0,
+      "numMushroom": 0,
+      "numLeaves": 0,
+      "numButterflies": 0,
+      "numWolves": 0,
+      "pattern": "None",
+      "color1": null,
+      "color2": null,
+      "color3": null
+    },
+
+
+    {
+      "id": 101,
+      "type": "Objective",
+      "points": 2,
+      "numFeathers": 0,
+      "numParchments": 0,
+      "numPotions": 2,
+      "numMushroom": 0,
+      "numLeaves": 0,
+      "numButterflies": 0,
+      "numWolves": 0,
+      "pattern": "None",
+      "color1": null,
+      "color2": null,
+      "color3": null
+    },
+
+
+    {
+      "id": 102,
+      "type": "Objective",
+      "points": 2,
+      "numFeathers": 2,
+      "numParchments": 0,
+      "numPotions": 0,
+      "numMushroom": 0,
+      "numLeaves": 0,
+      "numButterflies": 0,
+      "numWolves": 0,
+      "pattern": "None",
+      "color1": null,
+      "color2": null,
+      "color3": null
+    }
+  ]
+}
\ No newline at end of file
